{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from 'axios';\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { Questionbox } from '../Components/Questionbox/questionbox';\nimport { Qgenerationsetting } from '../Components/Qgenerationsetting/qgenerationsetting';\nimport { Recommendquestion } from '../Components/Recommendquestion/recommendquestion';\nimport './page.css';\n\n// a little function to help us with reordering the result\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reorder = (array, fromIndex, toIndex) => {\n  const elementToMove = array.splice(fromIndex, 1)[0];\n  array.splice(toIndex, 0, elementToMove);\n  return array;\n};\nconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst generateRandomKey = length => {\n  let result = ' ';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport const MainPage = props => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const {\n    url,\n    username,\n    userScholarID\n  } = location.state;\n  const [title, setTitle] = useState(\"Title of Research Paper\");\n  const [abstract, setAbstract] = useState(\"\");\n  const [authors, setAuthors] = useState(\"\");\n  const [authorInfo, setAuthorInfo] = useState();\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [recommendQTemp, setRecommendQTemp] = useState([]);\n  const [recommendQs, setRecommendQs] = useState([]);\n  const [loadRQs, setLoadRQs] = useState(false);\n  const [QnAs, setQnAs] = useState([]);\n  const [waitQList, setWaitQList] = useState([]);\n  const [viewerprompt, setViewerprompt] = useState(\"\");\n  const [isQsetting, setIsQsetting] = useState(false);\n  useEffect(() => {\n    const load_data = async () => {\n      try {\n        const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getMeta/' + String(url).split('/').pop();\n        const result = await axios(getApi);\n        setTitle(String(result.data.meta[0]));\n        setAbstract(String(result.data.meta[1]));\n        setAuthors(result.data.meta[2].join(\", \"));\n        await axios({\n          method: \"POST\",\n          url: \"https://qna-restapi-dxpyj.run.goorm.site/getQestionsetData\",\n          data: {\n            title: String(result.data.meta[0])\n          },\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          const res = response.data;\n          if (res != null) {\n            setQnAs(res);\n          }\n        }).catch(error => {\n          console.log(\"error\");\n        });\n        await axios({\n          method: \"POST\",\n          url: \"https://qna-restapi-dxpyj.run.goorm.site/saveAuthorInfo\",\n          data: {\n            authorID: String(userScholarID).split('/').pop()\n          },\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          const res = response.data;\n          if (res != null) {\n            setAuthorInfo(res);\n          }\n        }).catch(error => {\n          console.log(\"error\");\n        });\n      } catch (error) {\n        console.error('Error:', error);\n      }\n      setIsLoading(true);\n    };\n    if (title === \"Title of Research Paper\") {\n      load_data();\n    }\n  }, []);\n  useEffect(() => {\n    axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/uploadQuestionSet\",\n      data: {\n        title: title,\n        question_set: QnAs,\n        user: username\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {}).catch(error => {\n      console.log(\"error\");\n    });\n  }, [QnAs]);\n  const currentQuestionHandler = e => {\n    e.preventDefault();\n    setCurrentQuestion(e.target.value);\n  };\n\n  // const generateQuestion = async () => {\n  //     setLoadRQs(true);\n  //     try {\n  //         const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getQuestion/' + String(url).split('/').pop();\n  //         const result = await axios(getApi);\n  //         setRecommendQTurn(recommendQTurn + 1);\n  //         setRecommendQs(result.data.questions);\n  //     } catch (error) {\n  //         console.error('Error:', error);\n  //     }\n  //     setLoadRQs(false);\n  // }\n\n  async function generateRecommendQuestion(endpoint) {\n    setLoadRQs(true);\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/\" + endpoint + \"/\",\n      data: {\n        url: String(url).split('/').pop(),\n        authorID: String(userScholarID).split('/').pop(),\n        title: title,\n        abstract: abstract,\n        added: recommendQTemp.map(QnA => QnA.question),\n        viewer: viewerprompt\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setRecommendQs(res.questions);\n      setRecommendQTemp(res.questions);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setLoadRQs(false);\n  }\n  async function addQuestion(question) {\n    var id = generateRandomKey(5);\n    setWaitQList(prevData => [...prevData, {\n      id: id,\n      question: question\n    }]);\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => [...prevData, {\n        question: String(question),\n        answer: String(res.lucy_answer),\n        isPublic: false\n      }]);\n      setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n    }).catch(error => {\n      setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n    });\n  }\n  async function addFollowUpAnswer(question, index) {\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => {\n        const newQnAs = [...prevData];\n        newQnAs.splice(index + 1, 0, {\n          question: String(question),\n          answer: String(res.lucy_answer),\n          isPublic: false\n        });\n        return newQnAs;\n      });\n    }).catch(error => {});\n  }\n  async function regenerateAnswer(question, updateIndex) {\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => {\n        let newData = [...prevData];\n        newData.map((QnA, index) => updateIndex === index ? {\n          ...QnA,\n          answer: String(res.lucy_answer)\n        } : QnA);\n        return newData;\n      });\n    }).catch(error => {});\n  }\n  function deleteQuestion(index) {\n    setQnAs(prevData => prevData.filter((item, i) => i !== index));\n  }\n  function addRecommendQuestion(question, index) {\n    addQuestion(question);\n    setRecommendQs(prevData => {\n      let newArray = [...prevData];\n      newArray.splice(index, 1);\n      return newArray;\n    });\n  }\n  function addCurrentQuestion() {\n    if (currentQuestion !== \"\") {\n      addQuestion(currentQuestion);\n      setCurrentQuestion(\"\");\n    }\n  }\n  function updateAnswer(updateIndex, newAnswer) {\n    setQnAs(prevData => prevData.map((QnA, index) => updateIndex === index ? {\n      ...QnA,\n      answer: newAnswer\n    } : QnA));\n  }\n  function updatePublic(updateIndex, isPublic) {\n    setQnAs(prevData => prevData.map((QnA, index) => updateIndex === index ? {\n      ...QnA,\n      isPublic: isPublic\n    } : QnA));\n  }\n  function updateRecommendQuestion(updateIndex, newQuestion) {\n    setRecommendQs(prevData => prevData.map((question, index) => updateIndex === index ? newQuestion : question));\n  }\n  function onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const newQnAs = reorder(QnAs, result.source.index, result.destination.index);\n    setQnAs(newQnAs);\n  }\n  function openSetting() {\n    setIsQsetting(true);\n  }\n  function closeSetting() {\n    setIsQsetting(false);\n  }\n  function updatePrompt(prompt) {\n    setViewerprompt(prompt);\n  }\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainPage\",\n        children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loadingContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainPage\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authors\",\n          children: authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewContainer\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/preview',\n            state: {\n              url: url,\n              title: title,\n              abstract: abstract,\n              authors: authors,\n              QnAs: QnAs,\n              username: username\n            },\n            className: \"previewBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitleContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: currentQuestion,\n            onChange: currentQuestionHandler,\n            placeholder: \"Type Your Own Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCurrentQuestion,\n            children: \"Add +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitleContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"Question Recommendation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settingContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"setting\",\n              src: \"images/setting.png\",\n              alt: \"setting\",\n              onClick: openSetting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Qgenerationsetting, {\n              viewerprompt: viewerprompt,\n              isQsetting: isQsetting,\n              closeSetting: closeSetting,\n              updatePrompt: prompt => updatePrompt(prompt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendBtnContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recommendBtn\",\n              disabled: loadRQs,\n              onClick: () => generateRecommendQuestion('getQuestion'),\n              children: \"General Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recommendBtn\",\n              disabled: loadRQs,\n              onClick: () => generateRecommendQuestion('getPersonalizedQ'),\n              children: \"Personalized Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), loadRQs ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loading\",\n            src: \"images/loading.gif\",\n            alt: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 36\n          }, this) : recommendQs.map((rQ, index) => /*#__PURE__*/_jsxDEV(Recommendquestion, {\n            question: rQ,\n            addRecommendQuestion: () => addRecommendQuestion(rQ, index),\n            updateRecommendQuestion: updateQ => updateRecommendQuestion(index, updateQ)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 137\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitleContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"QnA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: onDragEnd,\n          children: [QnAs.length === 0 && waitQList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noQuestion\",\n            children: \"No Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 75\n          }, this) : /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef\n              // style={getListStyle(snapshot.isDraggingOver)}\n              ,\n              className: \"questionContainer\",\n              children: [QnAs.map((QnA, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: String(QnA.question + index),\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  children: /*#__PURE__*/_jsxDEV(Questionbox, {\n                    myIndex: index,\n                    id: String(QnA.question + index),\n                    title: title,\n                    abstract: abstract,\n                    question: QnA.question,\n                    answer: QnA.answer,\n                    isPublic: QnA.isPublic,\n                    updateAnswer: newAnswer => updateAnswer(index, newAnswer),\n                    updatePublic: isPublic => updatePublic(index, isPublic),\n                    deleteQuestion: () => deleteQuestion(index),\n                    addFollowUpAnswer: (question, i) => addFollowUpAnswer(question, i),\n                    regenerateAnswer: question => regenerateAnswer(question, index),\n                    handle: provided.dragHandleProps\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 49\n                }, this)\n              }, String(QnA.question + index), false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tempoQuestionboxContainer\",\n            children: waitQList.map((Q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tempoQuestionbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"questionbar\",\n                children: Q.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answerbox\",\n                children: \"Answer is being generated...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(MainPage, \"+bpdpKowSc/R1RovTWG8hEn1XdY=\", false, function () {\n  return [useLocation];\n});\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","DragDropContext","Droppable","Draggable","axios","Topbar","Questionbox","Qgenerationsetting","Recommendquestion","jsxDEV","_jsxDEV","Fragment","_Fragment","reorder","array","fromIndex","toIndex","elementToMove","splice","characters","generateRandomKey","length","result","charactersLength","i","charAt","Math","floor","random","MainPage","props","_s","isLoading","setIsLoading","location","url","username","userScholarID","state","title","setTitle","abstract","setAbstract","authors","setAuthors","authorInfo","setAuthorInfo","currentQuestion","setCurrentQuestion","recommendQTemp","setRecommendQTemp","recommendQs","setRecommendQs","loadRQs","setLoadRQs","QnAs","setQnAs","waitQList","setWaitQList","viewerprompt","setViewerprompt","isQsetting","setIsQsetting","load_data","getApi","String","split","pop","data","meta","join","method","headers","then","response","res","catch","error","console","log","authorID","question_set","user","currentQuestionHandler","e","preventDefault","target","value","generateRecommendQuestion","endpoint","added","map","QnA","question","viewer","questions","addQuestion","id","prevData","answer","lucy_answer","isPublic","filter","item","addFollowUpAnswer","index","newQnAs","regenerateAnswer","updateIndex","newData","deleteQuestion","addRecommendQuestion","newArray","addCurrentQuestion","updateAnswer","newAnswer","updatePublic","updateRecommendQuestion","newQuestion","onDragEnd","destination","source","openSetting","closeSetting","updatePrompt","prompt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","placeholder","onClick","src","alt","disabled","rQ","updateQ","droppableId","provided","snapshot","droppableProps","ref","innerRef","draggableId","draggableProps","myIndex","handle","dragHandleProps","Q","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useLocation, Link } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from 'axios';\n\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { Questionbox } from '../Components/Questionbox/questionbox';\nimport { Qgenerationsetting } from '../Components/Qgenerationsetting/qgenerationsetting';\nimport { Recommendquestion } from '../Components/Recommendquestion/recommendquestion';\nimport './page.css'\n\n\n// a little function to help us with reordering the result\nconst reorder = (array, fromIndex, toIndex) => {\n    const elementToMove = array.splice(fromIndex, 1)[0];\n    array.splice(toIndex, 0, elementToMove);\n    return array;\n};\n\nconst characters ='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nconst generateRandomKey = (length) => {\n    let result = ' ';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n}\n\nexport const MainPage = (props) => {\n\n    const[isLoading, setIsLoading] = useState(false);\n    const location = useLocation();\n    const { url, username, userScholarID } = location.state;\n    const[title, setTitle] = useState(\"Title of Research Paper\");\n    const[abstract, setAbstract] = useState(\"\");\n    const[authors, setAuthors] = useState(\"\");\n    const[authorInfo, setAuthorInfo] = useState();\n    const[currentQuestion, setCurrentQuestion] = useState(\"\");\n    const[recommendQTemp, setRecommendQTemp] = useState([]);\n    const[recommendQs, setRecommendQs] = useState([]);\n    const[loadRQs, setLoadRQs] = useState(false);\n    const[QnAs, setQnAs] = useState([]);\n    const[waitQList, setWaitQList] = useState([]);\n    const[viewerprompt, setViewerprompt] = useState(\"\");\n    const[isQsetting, setIsQsetting] = useState(false);\n\n    useEffect(() => {\n        const load_data = async () => {\n            try {\n                const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getMeta/' + String(url).split('/').pop();\n                const result = await axios(getApi);\n                setTitle(String(result.data.meta[0]));\n                setAbstract(String(result.data.meta[1]));\n                setAuthors(result.data.meta[2].join(\", \"));\n                await axios({\n                    method: \"POST\",\n                    url: \"https://qna-restapi-dxpyj.run.goorm.site/getQestionsetData\",\n                    data: {title: String(result.data.meta[0])},\n                    headers: {'Content-Type': 'application/json'}\n                })\n                .then ((response) => {\n                    const res =response.data;\n                    if (res != null) {\n                        setQnAs(res);\n                    }\n                })\n                .catch(error =>{\n                    console.log(\"error\");\n                })\n                await axios({\n                    method: \"POST\",\n                    url: \"https://qna-restapi-dxpyj.run.goorm.site/saveAuthorInfo\",\n                    data: {authorID: String(userScholarID).split('/').pop()},\n                    headers: {'Content-Type': 'application/json'}\n                })\n                .then ((response) => {\n                    const res =response.data;\n                    if (res != null) {\n                        setAuthorInfo(res);\n                    }\n                })\n                .catch(error =>{\n                    console.log(\"error\");\n                })\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setIsLoading(true);\n        };\n\n        if(title === \"Title of Research Paper\") {\n            load_data();\n        }\n    }, []);\n\n    useEffect(() => {\n        axios({\n            method: \"POST\",\n            url: \"https://qna-restapi-dxpyj.run.goorm.site/uploadQuestionSet\",\n            data: {\n                title: title, \n                question_set: QnAs, \n                user: username\n            },\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then ((response) => {\n        })\n        .catch(error =>{\n            console.log(\"error\");\n        })\n    }, [QnAs]);\n\n    const currentQuestionHandler = (e) => {\n        e.preventDefault();\n        setCurrentQuestion(e.target.value);\n    }\n\n    // const generateQuestion = async () => {\n    //     setLoadRQs(true);\n    //     try {\n    //         const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getQuestion/' + String(url).split('/').pop();\n    //         const result = await axios(getApi);\n    //         setRecommendQTurn(recommendQTurn + 1);\n    //         setRecommendQs(result.data.questions);\n    //     } catch (error) {\n    //         console.error('Error:', error);\n    //     }\n    //     setLoadRQs(false);\n    // }\n\n    async function generateRecommendQuestion (endpoint) {\n        setLoadRQs(true);\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/\" + endpoint + \"/\",\n            data: { \n                url: String(url).split('/').pop(),\n                authorID: String(userScholarID).split('/').pop(),\n                title: title,\n                abstract: abstract,\n                added: recommendQTemp.map(QnA => QnA.question),\n                viewer: viewerprompt\n            },\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setRecommendQs(res.questions);\n            setRecommendQTemp(res.questions);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n        setLoadRQs(false);\n    }\n\n    async function addQuestion (question) {\n        var id = generateRandomKey(5);\n        setWaitQList(prevData => [...prevData, {id: id, question: question}]);\n\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setQnAs(prevData => [...prevData, {question: String(question), answer: String(res.lucy_answer), isPublic: false}]);\n            setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n        })\n        .catch(error => {\n            setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n        });\n    }\n\n    async function addFollowUpAnswer (question, index) {\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setQnAs( prevData => {\n                const newQnAs = [...prevData];\n                newQnAs.splice(index + 1, 0, {question: String(question), answer: String(res.lucy_answer), isPublic: false});\n                return newQnAs;\n            });\n        })\n        .catch(error => {\n        });\n    }\n\n    async function regenerateAnswer (question, updateIndex) {\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n\n            setQnAs(prevData => {\n                let newData = [...prevData];\n                newData.map((QnA, index) => updateIndex === index ? {...QnA, answer: String(res.lucy_answer) } : QnA);\n                return newData;\n            })\n        })\n        .catch(error => {\n        });\n    }\n\n    function deleteQuestion (index) {\n        setQnAs(prevData => prevData.filter((item, i) => i !== index));\n    }\n\n    function addRecommendQuestion (question, index) {\n        addQuestion(question);\n        setRecommendQs(prevData => {\n            let newArray = [...prevData];\n            newArray.splice(index, 1);\n            return newArray;\n        })\n    }\n\n    function addCurrentQuestion () {\n        if(currentQuestion !== \"\") {\n            addQuestion(currentQuestion);\n            setCurrentQuestion(\"\");\n        }\n    }\n\n    function updateAnswer (updateIndex, newAnswer) {\n        setQnAs(prevData => (\n            prevData.map((QnA, index) => updateIndex === index ? {...QnA, answer: newAnswer } : QnA)\n        ));\n    }\n\n    function updatePublic (updateIndex, isPublic) {\n        setQnAs(prevData => (\n            prevData.map((QnA, index) => updateIndex === index ? {...QnA, isPublic: isPublic } : QnA)\n        ));\n    }\n\n    function updateRecommendQuestion (updateIndex, newQuestion) {\n        setRecommendQs(prevData => (\n            prevData.map((question, index) => updateIndex === index ? newQuestion : question)\n        ));\n    }\n\n    function onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n        const newQnAs = reorder(\n            QnAs,\n            result.source.index,\n            result.destination.index\n        );\n        setQnAs(newQnAs);\n    }\n\n    function openSetting () {\n        setIsQsetting(true);\n    }\n    \n    function closeSetting () {\n        setIsQsetting(false);\n    }\n\n    function updatePrompt (prompt) {\n        setViewerprompt(prompt);\n    }\n\n    if(!isLoading) {\n        return(\n            <>\n                <div className='mainPage'>\n                    <Topbar/>\n                    <div className='loadingContainer'>\n                        <div>\n                            Loading...\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    return(\n        <>\n            <div className='mainPage'>\n                <Topbar/>\n                <div className='container'>\n                    <div className='title'>\n                        {title}\n                    </div>\n                    <div className='authors'>\n                        {authors}\n                    </div>\n                    <div className='previewContainer'>\n                        <Link \n                            to = {'/preview'}\n                            state = {{ \n                                url: url,\n                                title: title,\n                                abstract: abstract,\n                                authors: authors,\n                                QnAs: QnAs,\n                                username: username\n                                }} \n                            className='previewBtn'\n                        >\n                            <div>Preview</div>\n                        </Link>\n                    </div>\n                    <div className='subtitleContainer'>\n                        <div className='subtitle'>\n                            Add Question\n                        </div>    \n                    </div>\n                    <div className='inputContainer'>\n                        <input value={currentQuestion} onChange={currentQuestionHandler} placeholder='Type Your Own Question'></input>\n                        <button onClick={addCurrentQuestion}>Add +</button>\n                    </div>\n                    <div className='subtitleContainer'>\n                        <div className='subtitle'>\n                            Question Recommendation\n                        </div>    \n                        <div className='settingContainer'>\n                            <img className='setting' src=\"images/setting.png\" alt=\"setting\" onClick={openSetting}/>\n                            <Qgenerationsetting viewerprompt={viewerprompt} isQsetting={isQsetting} closeSetting={closeSetting} updatePrompt={(prompt) => updatePrompt(prompt)}/>\n                        </div>\n                    </div>\n                    <div className='recommendContainer'>\n                        <div className='recommendBtnContainer'>\n                            <button className='recommendBtn' disabled={loadRQs} onClick={() => generateRecommendQuestion('getQuestion')}>General Question</button>\n                            <button className='recommendBtn' disabled={loadRQs} onClick={() => generateRecommendQuestion('getPersonalizedQ')}>Personalized Question</button>\n                        </div>\n                        {loadRQs ? <img className='loading' src=\"images/loading.gif\" alt=\"loading\" /> : recommendQs.map((rQ, index) => (<Recommendquestion key={index} question={rQ} addRecommendQuestion={() => addRecommendQuestion(rQ, index)} updateRecommendQuestion={(updateQ) => updateRecommendQuestion(index, updateQ)}/>))}\n                    </div>\n                    <div className='subtitleContainer'>\n                        <div className='subtitle'>\n                            QnA\n                        </div>    \n                    </div>\n                    <DragDropContext onDragEnd={onDragEnd}>\n                        { (QnAs.length === 0 && waitQList.length === 0) ? <div className='noQuestion'>No Question</div> \n                            :\n                            <Droppable droppableId=\"droppable\">\n                                {(provided, snapshot) => (\n                                    <div\n                                        {...provided.droppableProps}\n                                        ref={provided.innerRef}\n                                        // style={getListStyle(snapshot.isDraggingOver)}\n                                        className='questionContainer'\n                                    >\n                                    {QnAs.map((QnA, index) => (\n                                        <Draggable key={String(QnA.question + index)} draggableId={String(QnA.question + index)} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                >\n                                                    <Questionbox \n                                                        key={index}\n                                                        myIndex={index}\n                                                        id={String(QnA.question + index)}\n                                                        title ={title}\n                                                        abstract = { abstract }\n                                                        question={QnA.question}\n                                                        answer={QnA.answer}\n                                                        isPublic={QnA.isPublic}\n                                                        updateAnswer={(newAnswer)=>updateAnswer(index, newAnswer)}\n                                                        updatePublic={(isPublic)=>updatePublic(index, isPublic)}\n                                                        deleteQuestion={() => deleteQuestion(index)}\n                                                        addFollowUpAnswer = {(question, i) => addFollowUpAnswer(question, i)}\n                                                        regenerateAnswer = {(question) => regenerateAnswer(question, index)}\n                                                        handle={provided.dragHandleProps}\n                                                    />\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                    {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                        }\n                        <div className='tempoQuestionboxContainer'>\n                            {waitQList.map((Q, index) => (\n                                <div className='tempoQuestionbox' key={index}>\n                                    <div className='questionbar'>{Q.question}</div>\n                                    <div className='answerbox'>Answer is being generated...</div>\n                                </div>\n                            ))}\n                        </div>\n                    </DragDropContext>\n                </div>\n                <div className='footer'>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}