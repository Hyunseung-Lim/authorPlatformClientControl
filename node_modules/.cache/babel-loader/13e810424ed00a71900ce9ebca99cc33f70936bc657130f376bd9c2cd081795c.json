{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Qgenerationsetting/qgenerationsetting.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './qgenerationsetting.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Qgenerationsetting = props => {\n  _s();\n  const [prevPrompt, setPrevPrompt] = useState(\"\");\n  const [currentPrompt, setCurrentPrompt] = useState(\"\");\n  useEffect(() => {\n    setPrevPrompt(props.viewerprompt);\n    setCurrentPrompt(props.viewerprompt);\n  }, []);\n  const currentPromptHandler = e => {\n    e.preventDefault();\n    setCurrentPrompt(e.target.value);\n  };\n  if (props.isQsetting === false) {\n    return null;\n  }\n  function close() {\n    props.closeSetting();\n    setCurrentPrompt(prevPrompt);\n  }\n  function savePrompt() {\n    props.updatePrompt(currentPrompt);\n    setPrevPrompt(currentPrompt);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qgenerationsetting\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: close,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Additional Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: currentPrompt,\n        onChange: currentPromptHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: savePrompt,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Qgenerationsetting, \"zhVK3qJyRc525rtYG8E36/tMPXE=\");\n_c = Qgenerationsetting;\nvar _c;\n$RefreshReg$(_c, \"Qgenerationsetting\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Qgenerationsetting","props","_s","prevPrompt","setPrevPrompt","currentPrompt","setCurrentPrompt","viewerprompt","currentPromptHandler","e","preventDefault","target","value","isQsetting","close","closeSetting","savePrompt","updatePrompt","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Qgenerationsetting/qgenerationsetting.js"],"sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\n\nimport './qgenerationsetting.css'\n\nexport const Qgenerationsetting = (props) => {\n\n    const [prevPrompt, setPrevPrompt] = useState(\"\");\n    const [currentPrompt, setCurrentPrompt] = useState(\"\");\n\n    useEffect(()=> {\n        setPrevPrompt(props.viewerprompt);\n        setCurrentPrompt(props.viewerprompt);\n    }, []);\n\n\n    const currentPromptHandler = (e) => {\n        e.preventDefault();\n        setCurrentPrompt(e.target.value);\n    }\n\n    if (props.isQsetting === false) {\n        return null;\n    }\n\n    function close () {\n        props.closeSetting();\n        setCurrentPrompt(prevPrompt);\n    }\n\n    function savePrompt () {\n        props.updatePrompt(currentPrompt);\n        setPrevPrompt(currentPrompt);\n    }\n\n    return(\n        <>\n            <div className='qgenerationsetting'>\n                <button onClick={close}>close</button>\n                <div className='title'>Additional Prompt</div>\n                <textarea value={currentPrompt} onChange={currentPromptHandler}/>\n                <button onClick={savePrompt}>save</button>\n            </div>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAEzD,OAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtDE,SAAS,CAAC,MAAK;IACXS,aAAa,CAACH,KAAK,CAACM,YAAY,CAAC;IACjCD,gBAAgB,CAACL,KAAK,CAACM,YAAY,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,oBAAoB,GAAIC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,gBAAgB,CAACG,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,IAAIX,KAAK,CAACY,UAAU,KAAK,KAAK,EAAE;IAC5B,OAAO,IAAI;EACf;EAEA,SAASC,KAAKA,CAAA,EAAI;IACdb,KAAK,CAACc,YAAY,CAAC,CAAC;IACpBT,gBAAgB,CAACH,UAAU,CAAC;EAChC;EAEA,SAASa,UAAUA,CAAA,EAAI;IACnBf,KAAK,CAACgB,YAAY,CAACZ,aAAa,CAAC;IACjCD,aAAa,CAACC,aAAa,CAAC;EAChC;EAEA,oBACIR,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACIrB,OAAA;MAAKsB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBAC/BrB,OAAA;QAAQuB,OAAO,EAAEN,KAAM;QAAAI,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC3B,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9C3B,OAAA;QAAUe,KAAK,EAAEP,aAAc;QAACoB,QAAQ,EAAEjB;MAAqB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjE3B,OAAA;QAAQuB,OAAO,EAAEJ,UAAW;QAAAE,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAtB,EAAA,CAxCYF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}