{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from 'axios';\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { Questionbox } from '../Components/Questionbox/questionbox';\nimport { Recommendquestion } from '../Components/Recommendquestion/recommendquestion';\nimport './page.css';\n\n// a little function to help us with reordering the result\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reorder = (array, fromIndex, toIndex) => {\n  const elementToMove = array.splice(fromIndex, 1)[0];\n  array.splice(toIndex, 0, elementToMove);\n  return array;\n};\nconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst generateRandomKey = length => {\n  let result = ' ';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport const MainPage = props => {\n  _s();\n  const location = useLocation();\n  const {\n    url,\n    username\n  } = location.state;\n  const [title, setTitle] = useState(\"Title of Research Paper\");\n  const [abstract, setAbstract] = useState(\"\");\n  const [authors, setAuthors] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [recommendQs, setRecommendQs] = useState([]);\n  const [recommendQTurn, setRecommendQTurn] = useState(0);\n  const [loadRQs, setLoadRQs] = useState(false);\n  const [QnAs, setQnAs] = useState([]);\n  const [waitQList, setWaitQList] = useState([]);\n  const [viewerprompt, setViewerprompt] = useState(\"\");\n  useEffect(() => {\n    const load_data = async () => {\n      try {\n        const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getMeta/' + String(url).split('/').pop();\n        const result = await axios(getApi);\n        setTitle(String(result.data.meta[0]));\n        setAbstract(String(result.data.meta[1]));\n        setAuthors(result.data.meta[2].join(\", \"));\n        axios({\n          method: \"POST\",\n          url: \"https://qna-restapi-dxpyj.run.goorm.site/getQestionsetData\",\n          data: {\n            title: String(result.data.meta[0])\n          },\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          const res = response.data;\n          if (res != null) {\n            setQnAs(res);\n          }\n        }).catch(error => {\n          console.log(\"error\");\n        });\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    if (title === \"Title of Research Paper\") {\n      load_data();\n    }\n  }, []);\n  useEffect(() => {\n    axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/uploadQuestionSet\",\n      data: {\n        title: title,\n        question_set: QnAs,\n        user: username\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {}).catch(error => {\n      console.log(\"error\");\n    });\n  }, [QnAs]);\n  const currentQuestionHandler = e => {\n    e.preventDefault();\n    setCurrentQuestion(e.target.value);\n  };\n  const generateQuestion = async () => {\n    setLoadRQs(true);\n    try {\n      const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getQuestion/' + String(url).split('/').pop();\n      const result = await axios(getApi);\n      setRecommendQTurn(recommendQTurn + 1);\n      setRecommendQs(result.data.questions);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setLoadRQs(false);\n  };\n  async function generateRecommendQuestion(endpoint) {\n    setLoadRQs(true);\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/\" + endpoint + \"/\",\n      data: {\n        url: String(url).split('/').pop(),\n        turn: recommendQTurn,\n        added: QnAs.map(QnA => QnA.question),\n        viewer: viewerprompt\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setRecommendQs(res.questions);\n      setRecommendQTurn(recommendQTurn + 1);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setLoadRQs(false);\n  }\n  async function addQuestion(question) {\n    var id = generateRandomKey(5);\n    setWaitQList(prevData => [...prevData, {\n      id: id,\n      question: question\n    }]);\n    await axios({\n      method: \"POST\",\n      url: \"https://port-0-authorplatfomserver-7xwyjq992lljff6sw0.sel4.cloudtype.app/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => [...prevData, {\n        question: String(question),\n        answer: String(res.lucy_answer),\n        isPublic: false\n      }]);\n      setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n    }).catch(error => {\n      setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n    });\n  }\n  async function addFollowUpAnswer(question, index) {\n    await axios({\n      method: \"POST\",\n      url: \"https://port-0-authorplatfomserver-7xwyjq992lljff6sw0.sel4.cloudtype.app/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => {\n        const newQnAs = [...prevData];\n        newQnAs.splice(index + 1, 0, {\n          question: String(question),\n          answer: String(res.lucy_answer),\n          isPublic: false\n        });\n        return newQnAs;\n      });\n    }).catch(error => {});\n  }\n  async function regenerateAnswer(question, updateIndex) {\n    await axios({\n      method: \"POST\",\n      url: \"https://port-0-authorplatfomserver-7xwyjq992lljff6sw0.sel4.cloudtype.app/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => {\n        let newData = [...prevData];\n        newData.map((QnA, index) => updateIndex === index ? {\n          ...QnA,\n          answer: String(res.lucy_answer)\n        } : QnA);\n        return newData;\n      });\n    }).catch(error => {});\n  }\n  function deleteQuestion(index) {\n    setQnAs(prevData => prevData.filter((item, i) => i !== index));\n  }\n  function addRecommendQuestion(question, index) {\n    addQuestion(question);\n    setRecommendQs(prevData => {\n      let newArray = [...prevData];\n      newArray.splice(index, 1);\n      return newArray;\n    });\n  }\n  function addCurrentQuestion() {\n    if (currentQuestion !== \"\") {\n      addQuestion(currentQuestion);\n      setCurrentQuestion(\"\");\n    }\n  }\n  function updateAnswer(updateIndex, newAnswer) {\n    setQnAs(prevData => prevData.map((QnA, index) => updateIndex === index ? {\n      ...QnA,\n      answer: newAnswer\n    } : QnA));\n  }\n  function updatePublic(updateIndex, isPublic) {\n    setQnAs(prevData => prevData.map((QnA, index) => updateIndex === index ? {\n      ...QnA,\n      isPublic: isPublic\n    } : QnA));\n  }\n  function updateRecommendQuestion(updateIndex, newQuestion) {\n    setRecommendQs(prevData => prevData.map((question, index) => updateIndex === index ? newQuestion : question));\n  }\n  function onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const newQnAs = reorder(QnAs, result.source.index, result.destination.index);\n    setQnAs(newQnAs);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainPage\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authors\",\n          children: authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewContainer\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/preview',\n            state: {\n              url: url,\n              title: title,\n              abstract: abstract,\n              authors: authors,\n              QnAs: QnAs,\n              username: username\n            },\n            className: \"previewBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle\",\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: currentQuestion,\n            onChange: currentQuestionHandler,\n            placeholder: \"Type Your Own Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCurrentQuestion,\n            children: \"Add +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle\",\n          children: \"Question Recommendation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendBtnContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recommendBtn\",\n              disabled: loadRQs,\n              onClick: () => generateRecommendQuestion('getQuestion'),\n              children: \"Recommend General Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recommendBtn\",\n              disabled: loadRQs,\n              onClick: () => generateRecommendQuestion('getAuthorQuestion/'),\n              children: \"Recommend Author Custom Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), loadRQs ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loading\",\n            src: \"images/loading.gif\",\n            alt: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 36\n          }, this) : recommendQs.map((rQ, index) => /*#__PURE__*/_jsxDEV(Recommendquestion, {\n            question: rQ,\n            addRecommendQuestion: () => addRecommendQuestion(rQ, index),\n            updateRecommendQuestion: updateQ => updateRecommendQuestion(index, updateQ)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 137\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle\",\n          children: \"QnA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: onDragEnd,\n          children: [QnAs.length === 0 && waitQList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noQuestion\",\n            children: \"No Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 75\n          }, this) : /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef\n              // style={getListStyle(snapshot.isDraggingOver)}\n              ,\n              className: \"questionContainer\",\n              children: [QnAs.map((QnA, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: String(QnA.question + index),\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  children: /*#__PURE__*/_jsxDEV(Questionbox, {\n                    myIndex: index,\n                    id: String(QnA.question + index),\n                    title: title,\n                    abstract: abstract,\n                    question: QnA.question,\n                    answer: QnA.answer,\n                    isPublic: QnA.isPublic,\n                    updateAnswer: newAnswer => updateAnswer(index, newAnswer),\n                    updatePublic: isPublic => updatePublic(index, isPublic),\n                    deleteQuestion: () => deleteQuestion(index),\n                    addFollowUpAnswer: (question, i) => addFollowUpAnswer(question, i),\n                    regenerateAnswer: question => regenerateAnswer(question, index),\n                    handle: provided.dragHandleProps\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 49\n                }, this)\n              }, String(QnA.question + index), false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tempoQuestionboxContainer\",\n            children: waitQList.map((Q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tempoQuestionbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"questionbar\",\n                children: Q.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answerbox\",\n                children: \"Answer is being generated...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(MainPage, \"9q7E8xahSD0/81FkgPftxOntfwM=\", false, function () {\n  return [useLocation];\n});\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","DragDropContext","Droppable","Draggable","axios","Topbar","Questionbox","Recommendquestion","jsxDEV","_jsxDEV","Fragment","_Fragment","reorder","array","fromIndex","toIndex","elementToMove","splice","characters","generateRandomKey","length","result","charactersLength","i","charAt","Math","floor","random","MainPage","props","_s","location","url","username","state","title","setTitle","abstract","setAbstract","authors","setAuthors","currentQuestion","setCurrentQuestion","recommendQs","setRecommendQs","recommendQTurn","setRecommendQTurn","loadRQs","setLoadRQs","QnAs","setQnAs","waitQList","setWaitQList","viewerprompt","setViewerprompt","load_data","getApi","String","split","pop","data","meta","join","method","headers","then","response","res","catch","error","console","log","question_set","user","currentQuestionHandler","e","preventDefault","target","value","generateQuestion","questions","generateRecommendQuestion","endpoint","turn","added","map","QnA","question","viewer","addQuestion","id","prevData","answer","lucy_answer","isPublic","filter","item","addFollowUpAnswer","index","newQnAs","regenerateAnswer","updateIndex","newData","deleteQuestion","addRecommendQuestion","newArray","addCurrentQuestion","updateAnswer","newAnswer","updatePublic","updateRecommendQuestion","newQuestion","onDragEnd","destination","source","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","placeholder","onClick","disabled","src","alt","rQ","updateQ","droppableId","provided","snapshot","droppableProps","ref","innerRef","draggableId","draggableProps","myIndex","handle","dragHandleProps","Q","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useLocation, Link } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from 'axios';\n\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { Questionbox } from '../Components/Questionbox/questionbox';\nimport { Recommendquestion } from '../Components/Recommendquestion/recommendquestion';\nimport './page.css'\n\n\n// a little function to help us with reordering the result\nconst reorder = (array, fromIndex, toIndex) => {\n    const elementToMove = array.splice(fromIndex, 1)[0];\n    array.splice(toIndex, 0, elementToMove);\n    return array;\n};\n\nconst characters ='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nconst generateRandomKey = (length) => {\n    let result = ' ';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n}\n\nexport const MainPage = (props) => {\n\n    const location = useLocation();\n    const { url, username } = location.state;\n    const[title, setTitle] = useState(\"Title of Research Paper\");\n    const[abstract, setAbstract] = useState(\"\");\n    const[authors, setAuthors] = useState(\"\");\n    const[currentQuestion, setCurrentQuestion] = useState(\"\");\n    const[recommendQs, setRecommendQs] = useState([]);\n    const[recommendQTurn, setRecommendQTurn] = useState(0);\n    const[loadRQs, setLoadRQs] = useState(false);\n    const[QnAs, setQnAs] = useState([]);\n    const[waitQList, setWaitQList] = useState([]);\n    const[viewerprompt, setViewerprompt] = useState(\"\");\n\n    useEffect(() => {\n        const load_data = async () => {\n            try {\n                const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getMeta/' + String(url).split('/').pop();\n                const result = await axios(getApi);\n                setTitle(String(result.data.meta[0]));\n                setAbstract(String(result.data.meta[1]));\n                setAuthors(result.data.meta[2].join(\", \"));\n                axios({\n                    method: \"POST\",\n                    url: \"https://qna-restapi-dxpyj.run.goorm.site/getQestionsetData\",\n                    data: {title: String(result.data.meta[0])},\n                    headers: {'Content-Type': 'application/json'}\n                })\n                .then ((response) => {\n                    const res =response.data;\n                    if (res != null) {\n                        setQnAs(res);\n                    }\n                })\n                .catch(error =>{\n                    console.log(\"error\");\n                })\n            } catch (error) {\n                console.error('Error:', error);\n            }\n        };\n\n        if(title === \"Title of Research Paper\") {\n            load_data();\n        }\n    }, []);\n\n    useEffect(() => {\n        axios({\n            method: \"POST\",\n            url: \"https://qna-restapi-dxpyj.run.goorm.site/uploadQuestionSet\",\n            data: {\n                title: title, \n                question_set: QnAs, \n                user: username\n            },\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then ((response) => {\n        })\n        .catch(error =>{\n            console.log(\"error\");\n        })\n    }, [QnAs]);\n\n    const currentQuestionHandler = (e) => {\n        e.preventDefault();\n        setCurrentQuestion(e.target.value);\n    }\n\n    const generateQuestion = async () => {\n        setLoadRQs(true);\n        try {\n            const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getQuestion/' + String(url).split('/').pop();\n            const result = await axios(getApi);\n            setRecommendQTurn(recommendQTurn + 1);\n            setRecommendQs(result.data.questions);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n        setLoadRQs(false);\n    }\n\n    async function generateRecommendQuestion (endpoint) {\n        setLoadRQs(true);\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/\" + endpoint + \"/\",\n            data: { \n                url: String(url).split('/').pop(), \n                turn: recommendQTurn,\n                added: QnAs.map(QnA => QnA.question),\n                viewer: viewerprompt\n            },\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setRecommendQs(res.questions);\n            setRecommendQTurn(recommendQTurn + 1);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n        setLoadRQs(false);\n    }\n\n    async function addQuestion (question) {\n        var id = generateRandomKey(5);\n        setWaitQList(prevData => [...prevData, {id: id, question: question}]);\n\n        await axios({\n            method: \"POST\",\n            url:\"https://port-0-authorplatfomserver-7xwyjq992lljff6sw0.sel4.cloudtype.app/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setQnAs(prevData => [...prevData, {question: String(question), answer: String(res.lucy_answer), isPublic: false}]);\n            setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n        })\n        .catch(error => {\n            setWaitQList(prevData => prevData.filter((item, i) => item.id !== id));\n        });\n    }\n\n    async function addFollowUpAnswer (question, index) {\n        await axios({\n            method: \"POST\",\n            url:\"https://port-0-authorplatfomserver-7xwyjq992lljff6sw0.sel4.cloudtype.app/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setQnAs( prevData => {\n                const newQnAs = [...prevData];\n                newQnAs.splice(index + 1, 0, {question: String(question), answer: String(res.lucy_answer), isPublic: false});\n                return newQnAs;\n            });\n        })\n        .catch(error => {\n        });\n    }\n\n    async function regenerateAnswer (question, updateIndex) {\n        await axios({\n            method: \"POST\",\n            url:\"https://port-0-authorplatfomserver-7xwyjq992lljff6sw0.sel4.cloudtype.app/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n\n            setQnAs(prevData => {\n                let newData = [...prevData];\n                newData.map((QnA, index) => updateIndex === index ? {...QnA, answer: String(res.lucy_answer) } : QnA);\n                return newData;\n            })\n        })\n        .catch(error => {\n        });\n    }\n\n    function deleteQuestion (index) {\n        setQnAs(prevData => prevData.filter((item, i) => i !== index));\n    }\n\n    function addRecommendQuestion (question, index) {\n        addQuestion(question);\n        setRecommendQs(prevData => {\n            let newArray = [...prevData];\n            newArray.splice(index, 1);\n            return newArray;\n        })\n    }\n\n    function addCurrentQuestion () {\n        if(currentQuestion !== \"\") {\n            addQuestion(currentQuestion);\n            setCurrentQuestion(\"\");\n        }\n    }\n\n    function updateAnswer (updateIndex, newAnswer) {\n        setQnAs(prevData => (\n            prevData.map((QnA, index) => updateIndex === index ? {...QnA, answer: newAnswer } : QnA)\n        ));\n    }\n\n    function updatePublic (updateIndex, isPublic) {\n        setQnAs(prevData => (\n            prevData.map((QnA, index) => updateIndex === index ? {...QnA, isPublic: isPublic } : QnA)\n        ));\n    }\n\n    function updateRecommendQuestion (updateIndex, newQuestion) {\n        setRecommendQs(prevData => (\n            prevData.map((question, index) => updateIndex === index ? newQuestion : question)\n        ));\n    }\n\n    function onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n        const newQnAs = reorder(\n            QnAs,\n            result.source.index,\n            result.destination.index\n        );\n        setQnAs(newQnAs);\n    }\n\n    return(\n        <>\n            <div className='mainPage'>\n                <Topbar/>\n                <div className='container'>\n                    <div className='title'>\n                        {title}\n                    </div>\n                    <div className='authors'>\n                        {authors}\n                    </div>\n                    <div className='previewContainer'>\n                        <Link \n                            to = {'/preview'}\n                            state = {{ \n                                url: url,\n                                title: title,\n                                abstract: abstract,\n                                authors: authors,\n                                QnAs: QnAs,\n                                username: username\n                                }} \n                            className='previewBtn'\n                        >\n                            <div>Preview</div>\n                        </Link>\n                    </div>\n                    <div className='subtitle'>\n                        Add Question\n                    </div>\n                    <div className='inputContainer'>\n                        <input value={currentQuestion} onChange={currentQuestionHandler} placeholder='Type Your Own Question'></input>\n                        <button onClick={addCurrentQuestion}>Add +</button>\n                    </div>\n                    <div className='subtitle'>\n                        Question Recommendation\n                    </div>\n                    <div className='recommendContainer'>\n                        <div className='recommendBtnContainer'>\n                            <button className='recommendBtn' disabled={loadRQs} onClick={() => generateRecommendQuestion('getQuestion')}>Recommend General Question</button>\n                            <button className='recommendBtn' disabled={loadRQs} onClick={() => generateRecommendQuestion('getAuthorQuestion/')}>Recommend Author Custom Question</button>                            \n                        </div>\n                        {loadRQs ? <img className='loading' src=\"images/loading.gif\" alt=\"loading\" /> : recommendQs.map((rQ, index) => (<Recommendquestion key={index} question={rQ} addRecommendQuestion={() => addRecommendQuestion(rQ, index)} updateRecommendQuestion={(updateQ) => updateRecommendQuestion(index, updateQ)}/>))}\n                    </div>\n                    <div className='subtitle'>\n                        QnA\n                    </div>\n                    <DragDropContext onDragEnd={onDragEnd}>\n                        { (QnAs.length === 0 && waitQList.length === 0) ? <div className='noQuestion'>No Question</div> \n                            :\n                            <Droppable droppableId=\"droppable\">\n                                {(provided, snapshot) => (\n                                    <div\n                                        {...provided.droppableProps}\n                                        ref={provided.innerRef}\n                                        // style={getListStyle(snapshot.isDraggingOver)}\n                                        className='questionContainer'\n                                    >\n                                    {QnAs.map((QnA, index) => (\n                                        <Draggable key={String(QnA.question + index)} draggableId={String(QnA.question + index)} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                >\n                                                    <Questionbox \n                                                        key={index}\n                                                        myIndex={index}\n                                                        id={String(QnA.question + index)}\n                                                        title ={title}\n                                                        abstract = { abstract }\n                                                        question={QnA.question}\n                                                        answer={QnA.answer}\n                                                        isPublic={QnA.isPublic}\n                                                        updateAnswer={(newAnswer)=>updateAnswer(index, newAnswer)}\n                                                        updatePublic={(isPublic)=>updatePublic(index, isPublic)}\n                                                        deleteQuestion={() => deleteQuestion(index)}\n                                                        addFollowUpAnswer = {(question, i) => addFollowUpAnswer(question, i)}\n                                                        regenerateAnswer = {(question) => regenerateAnswer(question, index)}\n                                                        handle={provided.dragHandleProps}\n                                                    />\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                    {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                        }\n                        <div className='tempoQuestionboxContainer'>\n                            {waitQList.map((Q, index) => (\n                                <div className='tempoQuestionbox' key={index}>\n                                    <div className='questionbar'>{Q.question}</div>\n                                    <div className='answerbox'>Answer is being generated...</div>\n                                </div>\n                            ))}\n                        </div>\n                    </DragDropContext>\n                </div>\n                <div className='footer'>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}