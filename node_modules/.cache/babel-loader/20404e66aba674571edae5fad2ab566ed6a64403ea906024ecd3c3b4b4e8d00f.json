{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Previewquestionbox/previewquestionbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './previewquestionbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Previewquestionbox = props => {\n  _s();\n  const [isfold, setIsfold] = useState(true);\n  function changeFold() {\n    setIsfold(!isfold);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewquestionbox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contatiner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: props.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), isfold ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/down.png\",\n            onClick: changeFold\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/up.png\",\n            onClick: changeFold\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), isfold ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewAnswerbox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer\",\n            children: props.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Previewquestionbox, \"KQ3d4rJMXKFlvGO2Uo18a/CEFoM=\");\n_c = Previewquestionbox;\nvar _c;\n$RefreshReg$(_c, \"Previewquestionbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Previewquestionbox","props","_s","isfold","setIsfold","changeFold","children","className","question","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","answer","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Previewquestionbox/previewquestionbox.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './previewquestionbox.css'\n\n\nexport const Previewquestionbox = (props) => {\n\n    const[isfold, setIsfold] = useState(true);\n\n    function changeFold() {\n        setIsfold(!isfold);\n    }\n\n    return(\n        <>\n            <div className='previewquestionbox'>\n                <div className='contatiner'>\n                    <div className='questionbar'>\n                        <div className='question'>\n                            {props.question}\n                        </div>\n                        {isfold ?\n                            <img src=\"images/down.png\" onClick={changeFold} />\n                            :\n                            <img src=\"images/up.png\" onClick={changeFold} />\n                        }\n                    </div>\n                    {isfold ? null : \n                        <div className='previewAnswerbox'>\n                            <div className='answer'>\n                                {props.answer}\n                            </div>                         \n                        </div>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEzC,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEzC,SAASU,UAAUA,CAAA,EAAG;IAClBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB;EAEA,oBACIN,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACIT,OAAA;MAAKU,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eAC/BT,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBT,OAAA;UAAKU,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxBT,OAAA;YAAKU,SAAS,EAAC,UAAU;YAAAD,QAAA,EACpBL,KAAK,CAACO;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,EACLT,MAAM,gBACHN,OAAA;YAAKgB,GAAG,EAAC,iBAAiB;YAACC,OAAO,EAAET;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAElDf,OAAA;YAAKgB,GAAG,EAAC,eAAe;YAACC,OAAO,EAAET;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEnD,CAAC,EACLT,MAAM,GAAG,IAAI,gBACVN,OAAA;UAAKU,SAAS,EAAC,kBAAkB;UAAAD,QAAA,eAC7BT,OAAA;YAAKU,SAAS,EAAC,QAAQ;YAAAD,QAAA,EAClBL,KAAK,CAACc;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAV,EAAA,CAjCYF,kBAAkB;AAAAgB,EAAA,GAAlBhB,kBAAkB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}