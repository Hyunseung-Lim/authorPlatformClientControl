{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Questionbox/questionbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './questionbox.css';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport ToggleButton from 'react-toggle-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Questionbox = props => {\n  _s();\n  const [isEdit, setIsEdit] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n  const [isWaitAnswer, setIsWaitAnswer] = useState(false);\n  const [prevAnswer, setPrevAnswer] = useState(\"\");\n  const [currentAnswer, setCurrentAnser] = useState(\"\");\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    setPrevAnswer(props.answer);\n    setCurrentAnser(props.answer);\n    setIsPublic(props.isPublic);\n    setIsWaitAnswer(props.isWaitAnswer);\n    if (props.isWaitAnswer === false) {\n      cancelAnswer();\n    }\n  }, []);\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.dispatchEvent(new Event('input', {\n        bubbles: true\n      }));\n    }\n  }, [currentAnswer]);\n  useEffect(() => {\n    setIsWaitAnswer(props.isWaitAnswer);\n    if (props.isWaitAnswer === false) {\n      cancelAnswer();\n    }\n  }, [props.isWaitAnswer]);\n  const currentAnswerHandler = e => {\n    e.preventDefault();\n    setCurrentAnser(e.target.value);\n  };\n  function changeIsEdit() {\n    setCurrentAnser(props.answer);\n    setIsEdit(true);\n    if (textAreaRef.current) {\n      textAreaRef.current.focus();\n    }\n  }\n  function cancelAnswer() {\n    setCurrentAnser(prevAnswer);\n    setIsEdit(false);\n  }\n  function changeAnswer() {\n    props.updateAnswer(currentAnswer);\n    setPrevAnswer(currentAnswer);\n    setIsEdit(false);\n  }\n  function changePublic(isPublic) {\n    props.updatePublic(!isPublic);\n    setIsPublic(!isPublic);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contatiner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: props.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), isWaitAnswer ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"makepublic\",\n              children: \"make public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              inactiveLabel: '',\n              activeLabel: '',\n              colors: {\n                activeThumb: {\n                  base: 'rgb(164,44,37)'\n                },\n                inactiveThumb: {\n                  base: 'rgb(190,154,152)'\n                },\n                active: {\n                  base: 'rgb(234,209,207)',\n                  hover: 'rgb(242,217,215)'\n                },\n                inactive: {\n                  base: 'rgb(234,209,207)',\n                  hover: 'rgb(242,217,215)'\n                }\n              },\n              value: isPublic,\n              onToggle: value => {\n                changePublic(value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/trash.png\",\n              className: \"deleteBtn\",\n              onClick: props.deleteQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 41\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answerbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer\",\n            children: isEdit ? /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              className: \"editAnswer\",\n              ref: textAreaRef,\n              value: currentAnswer,\n              onChange: currentAnswerHandler,\n              onResize: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: props.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 177\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), isWaitAnswer ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonContainer\",\n            children: isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editBtns\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancelBtn\",\n                onClick: cancelAnswer,\n                children: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 69\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"completeBtn\",\n                onClick: changeAnswer,\n                children: \"complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 138\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: changeIsEdit,\n              children: \"Edit the Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 219\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"handle\",\n        src: \"images/handle.svg\",\n        alt: \"handle\",\n        ...props.handle\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Questionbox, \"b/62HCafDqBC4mPETzStngU6FOY=\");\n_c = Questionbox;\nvar _c;\n$RefreshReg$(_c, \"Questionbox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TextareaAutosize","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Questionbox","props","_s","isEdit","setIsEdit","isPublic","setIsPublic","isWaitAnswer","setIsWaitAnswer","prevAnswer","setPrevAnswer","currentAnswer","setCurrentAnser","textAreaRef","answer","cancelAnswer","current","dispatchEvent","Event","bubbles","currentAnswerHandler","e","preventDefault","target","value","changeIsEdit","focus","changeAnswer","updateAnswer","changePublic","updatePublic","children","className","question","fileName","_jsxFileName","lineNumber","columnNumber","inactiveLabel","activeLabel","colors","activeThumb","base","inactiveThumb","active","hover","inactive","onToggle","src","onClick","deleteQuestion","ref","onChange","onResize","alt","handle","id","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Questionbox/questionbox.js"],"sourcesContent":["import React, { useState, useRef, useEffect} from 'react'\nimport './questionbox.css'\nimport TextareaAutosize from 'react-autosize-textarea';\nimport ToggleButton from 'react-toggle-button';\n\n\nexport const Questionbox = (props) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [isPublic, setIsPublic] = useState(false);\n    const [isWaitAnswer, setIsWaitAnswer] = useState(false);\n    const [prevAnswer, setPrevAnswer] = useState(\"\");\n    const [currentAnswer, setCurrentAnser] = useState(\"\");\n    const textAreaRef = useRef(null);\n\n    useEffect(() => {\n        setPrevAnswer(props.answer);\n        setCurrentAnser(props.answer);\n        setIsPublic(props.isPublic);\n        setIsWaitAnswer(props.isWaitAnswer);\n        if(props.isWaitAnswer === false) {\n            cancelAnswer();\n        }\n    }, [])\n\n    useEffect(() => {\n        if(textAreaRef.current) {\n            textAreaRef.current.dispatchEvent(new Event('input', { bubbles: true }));\n        }\n    }, [currentAnswer]);\n\n    useEffect(()=> {\n        setIsWaitAnswer(props.isWaitAnswer);\n        if(props.isWaitAnswer === false) {\n            cancelAnswer();\n        }\n    }, [props.isWaitAnswer]);\n\n    const currentAnswerHandler = (e) => {\n        e.preventDefault();\n        setCurrentAnser(e.target.value);\n    }\n\n    function changeIsEdit() {\n        setCurrentAnser(props.answer);\n        setIsEdit(true);\n        if(textAreaRef.current) {\n            textAreaRef.current.focus();\n        }\n    }\n\n    function cancelAnswer() {\n        setCurrentAnser(prevAnswer);\n        setIsEdit(false);\n    }\n\n    function changeAnswer() {\n        props.updateAnswer(currentAnswer);\n        setPrevAnswer(currentAnswer);\n        setIsEdit(false);\n    }\n\n    function changePublic(isPublic) {\n        props.updatePublic(!isPublic);\n        setIsPublic(!isPublic);\n    }\n\n    return(\n        <>\n            <div className='questionbox'>\n                <div className='contatiner'>\n                    <div className='questionbar'>\n                        <div className='question'>\n                            {props.question}\n                        </div>\n                        {isWaitAnswer ? <div className='buttons'>\n                            <div className='makepublic'>\n                                make public\n                            </div>\n                            <ToggleButton\n                                inactiveLabel={''}\n                                activeLabel={''}\n                                colors={{\n                                    activeThumb: {\n                                        base: 'rgb(164,44,37)'\n                                    },\n                                    inactiveThumb: {\n                                        base: 'rgb(190,154,152)'\n                                    },\n                                    active: {\n                                        base: 'rgb(234,209,207)',\n                                        hover: 'rgb(242,217,215)'\n                                    },\n                                    inactive: {\n                                        base: 'rgb(234,209,207)',\n                                        hover: 'rgb(242,217,215)'\n                                    }\n                                }}\n                                value={ isPublic }\n                                onToggle={(value) => {\n                                    changePublic(value);\n                                }} \n                                />\n                            <img src=\"images/trash.png\" className='deleteBtn' onClick={props.deleteQuestion}/>\n                        </div> : null}\n                    </div>\n                    <div className='answerbox'>\n                        <div className='answer'>\n                            {isEdit ? <TextareaAutosize className='editAnswer' ref={textAreaRef} value={currentAnswer} onChange={currentAnswerHandler} onResize={(e) => {}}/> : <div>{props.answer}</div>}\n                        </div>\n                        {isWaitAnswer ?\n                            <div className='buttonContainer'>\n                                {isEdit ? <div className='editBtns'><button className='cancelBtn' onClick={cancelAnswer}>cancel</button> <button className='completeBtn' onClick={changeAnswer}>complete</button></div> : <button onClick={changeIsEdit}>Edit the Answer</button>}\n                            </div>\n                            : null\n                        }\n                    </div>\n                </div>\n                <img key={props.id} className='handle' src=\"images/handle.svg\" alt=\"handle\" {...props.handle}/>\n            </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}