{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/authorPlatformClientControl/src/Pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from 'axios';\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { Questionbox } from '../Components/Questionbox/questionbox';\nimport { Qgenerationsetting } from '../Components/Qgenerationsetting/qgenerationsetting';\nimport { Recommendquestion } from '../Components/Recommendquestion/recommendquestion';\nimport './page.css';\n\n// a little function to help us with reordering the result\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reorder = (array, fromIndex, toIndex) => {\n  const elementToMove = array.splice(fromIndex, 1)[0];\n  array.splice(toIndex, 0, elementToMove);\n  return array;\n};\nconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst generateRandomKey = length => {\n  let result = ' ';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport const MainPage = props => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const {\n    url,\n    username,\n    userScholarID,\n    title\n  } = location.state;\n  const [abstract, setAbstract] = useState(\"\");\n  const [authors, setAuthors] = useState(\"\");\n  const [authorInfo, setAuthorInfo] = useState();\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [recommendQs, setRecommendQs] = useState([]);\n  const [loadRQs, setLoadRQs] = useState(false);\n  const [QnAs, setQnAs] = useState([]);\n  const [waitQList, setWaitQList] = useState([]);\n  const [viewerprompt, setViewerprompt] = useState(\"\");\n  const [isQsetting, setIsQsetting] = useState(false);\n  useEffect(() => {\n    const load_data = async () => {\n      try {\n        await axios({\n          method: \"POST\",\n          url: \"https://qna-restapi-dxpyj.run.goorm.site/getQestionsetData\",\n          data: {\n            title: title\n          },\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          const res = response.data;\n          if (res != null) {\n            setQnAs(res);\n          }\n        }).catch(error => {\n          console.log(\"error\");\n        });\n      } catch (error) {\n        console.error('Error:', error);\n      }\n      setIsLoading(true);\n    };\n    load_data();\n  }, []);\n  useEffect(() => {\n    axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/uploadQuestionSet\",\n      data: {\n        title: title,\n        question_set: QnAs,\n        user: username\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {}).catch(error => {\n      console.log(\"error\");\n    });\n  }, [QnAs]);\n  const currentQuestionHandler = e => {\n    e.preventDefault();\n    setCurrentQuestion(e.target.value);\n  };\n\n  // const generateQuestion = async () => {\n  //     setLoadRQs(true);\n  //     try {\n  //         const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getQuestion/' + String(url).split('/').pop();\n  //         const result = await axios(getApi);\n  //         setRecommendQTurn(recommendQTurn + 1);\n  //         setRecommendQs(result.data.questions);\n  //     } catch (error) {\n  //         console.error('Error:', error);\n  //     }\n  //     setLoadRQs(false);\n  // }\n\n  async function generateRecommendQuestion(endpoint) {\n    setLoadRQs(true);\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/\" + endpoint + \"/\",\n      data: {\n        url: String(url).split('/').pop(),\n        authorID: String(userScholarID).split('/').pop(),\n        authorInfo: authorInfo,\n        title: title,\n        abstract: abstract,\n        viewer: viewerprompt\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setRecommendQs(res.questions);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setLoadRQs(false);\n  }\n  async function addQuestion(question) {\n    setQnAs(prevData => [...prevData, {\n      question: String(question),\n      answer: \"Enter the answer\",\n      isPublic: false\n    }]);\n  }\n  async function addFollowUpAnswer(question, index) {\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => {\n        const newQnAs = [...prevData];\n        newQnAs.splice(index + 1, 0, {\n          question: String(question),\n          answer: String(res.lucy_answer),\n          isPublic: false\n        });\n        return newQnAs;\n      });\n    }).catch(error => {});\n  }\n  async function regenerateAnswer(question, updateIndex) {\n    await axios({\n      method: \"POST\",\n      url: \"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n      data: {\n        question: question,\n        title: title\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const res = response.data;\n      setQnAs(prevData => {\n        let newData = [...prevData];\n        newData.map((QnA, index) => updateIndex === index ? {\n          ...QnA,\n          answer: String(res.lucy_answer)\n        } : QnA);\n        return newData;\n      });\n    }).catch(error => {});\n  }\n  function deleteQuestion(index) {\n    setQnAs(prevData => prevData.filter((item, i) => i !== index));\n  }\n  function addRecommendQuestion(question, index) {\n    addQuestion(question);\n    setRecommendQs(prevData => {\n      let newArray = [...prevData];\n      newArray.splice(index, 1);\n      return newArray;\n    });\n  }\n  function addCurrentQuestion() {\n    if (currentQuestion !== \"\") {\n      addQuestion(currentQuestion);\n      setCurrentQuestion(\"\");\n    }\n  }\n  function updateAnswer(updateIndex, newAnswer) {\n    setQnAs(prevData => prevData.map((QnA, index) => updateIndex === index ? {\n      ...QnA,\n      answer: newAnswer\n    } : QnA));\n  }\n  function updatePublic(updateIndex, isPublic) {\n    setQnAs(prevData => prevData.map((QnA, index) => updateIndex === index ? {\n      ...QnA,\n      isPublic: isPublic\n    } : QnA));\n  }\n  function updateRecommendQuestion(updateIndex, newQuestion) {\n    setRecommendQs(prevData => prevData.map((question, index) => updateIndex === index ? newQuestion : question));\n  }\n  function onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const newQnAs = reorder(QnAs, result.source.index, result.destination.index);\n    setQnAs(newQnAs);\n  }\n  function openSetting() {\n    setIsQsetting(true);\n  }\n  function closeSetting() {\n    setIsQsetting(false);\n  }\n  function updatePrompt(prompt) {\n    setViewerprompt(prompt);\n  }\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainPage\",\n        children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loadingContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainPage\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authors\",\n          children: authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewContainer\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/preview',\n            state: {\n              url: url,\n              title: title,\n              abstract: abstract,\n              authors: authors,\n              QnAs: QnAs,\n              username: username\n            },\n            className: \"previewBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitleContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: currentQuestion,\n            onChange: currentQuestionHandler,\n            placeholder: \"Type Your Own Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCurrentQuestion,\n            children: \"Add +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitleContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"QnA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: onDragEnd,\n          children: [QnAs.length === 0 && waitQList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noQuestion\",\n            children: \"No Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 75\n          }, this) : /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef\n              // style={getListStyle(snapshot.isDraggingOver)}\n              ,\n              className: \"questionContainer\",\n              children: [QnAs.map((QnA, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: String(QnA.question + index),\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  children: /*#__PURE__*/_jsxDEV(Questionbox, {\n                    myIndex: index,\n                    id: String(QnA.question + index),\n                    title: title,\n                    abstract: abstract,\n                    question: QnA.question,\n                    answer: QnA.answer,\n                    isPublic: QnA.isPublic,\n                    updateAnswer: newAnswer => updateAnswer(index, newAnswer),\n                    updatePublic: isPublic => updatePublic(index, isPublic),\n                    deleteQuestion: () => deleteQuestion(index),\n                    addFollowUpAnswer: (question, i) => addFollowUpAnswer(question, i),\n                    regenerateAnswer: question => regenerateAnswer(question, index),\n                    handle: provided.dragHandleProps\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 49\n                }, this)\n              }, String(QnA.question + index), false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tempoQuestionboxContainer\",\n            children: waitQList.map((Q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tempoQuestionbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"questionbar\",\n                children: Q.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answerbox\",\n                children: \"Answer is being generated...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(MainPage, \"5JLjddc2CeJ4TuRZdbMfPrHuBRg=\", false, function () {\n  return [useLocation];\n});\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","DragDropContext","Droppable","Draggable","axios","Topbar","Questionbox","Qgenerationsetting","Recommendquestion","jsxDEV","_jsxDEV","Fragment","_Fragment","reorder","array","fromIndex","toIndex","elementToMove","splice","characters","generateRandomKey","length","result","charactersLength","i","charAt","Math","floor","random","MainPage","props","_s","isLoading","setIsLoading","location","url","username","userScholarID","title","state","abstract","setAbstract","authors","setAuthors","authorInfo","setAuthorInfo","currentQuestion","setCurrentQuestion","recommendQs","setRecommendQs","loadRQs","setLoadRQs","QnAs","setQnAs","waitQList","setWaitQList","viewerprompt","setViewerprompt","isQsetting","setIsQsetting","load_data","method","data","headers","then","response","res","catch","error","console","log","question_set","user","currentQuestionHandler","e","preventDefault","target","value","generateRecommendQuestion","endpoint","String","split","pop","authorID","viewer","questions","addQuestion","question","prevData","answer","isPublic","addFollowUpAnswer","index","newQnAs","lucy_answer","regenerateAnswer","updateIndex","newData","map","QnA","deleteQuestion","filter","item","addRecommendQuestion","newArray","addCurrentQuestion","updateAnswer","newAnswer","updatePublic","updateRecommendQuestion","newQuestion","onDragEnd","destination","source","openSetting","closeSetting","updatePrompt","prompt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","placeholder","onClick","droppableId","provided","snapshot","droppableProps","ref","innerRef","draggableId","draggableProps","myIndex","id","handle","dragHandleProps","Q","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/authorPlatformClientControl/src/Pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useLocation, Link } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from 'axios';\n\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { Questionbox } from '../Components/Questionbox/questionbox';\nimport { Qgenerationsetting } from '../Components/Qgenerationsetting/qgenerationsetting';\nimport { Recommendquestion } from '../Components/Recommendquestion/recommendquestion';\nimport './page.css'\n\n\n// a little function to help us with reordering the result\nconst reorder = (array, fromIndex, toIndex) => {\n    const elementToMove = array.splice(fromIndex, 1)[0];\n    array.splice(toIndex, 0, elementToMove);\n    return array;\n};\n\nconst characters ='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nconst generateRandomKey = (length) => {\n    let result = ' ';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n}\n\nexport const MainPage = (props) => {\n\n    const[isLoading, setIsLoading] = useState(false);\n    const location = useLocation();\n    const { url, username, userScholarID ,title } = location.state;\n    const[abstract, setAbstract] = useState(\"\");\n    const[authors, setAuthors] = useState(\"\");\n    const[authorInfo, setAuthorInfo] = useState();\n    const[currentQuestion, setCurrentQuestion] = useState(\"\");\n    const[recommendQs, setRecommendQs] = useState([]);\n    const[loadRQs, setLoadRQs] = useState(false);\n    const[QnAs, setQnAs] = useState([]);\n    const[waitQList, setWaitQList] = useState([]);\n    const[viewerprompt, setViewerprompt] = useState(\"\");\n    const[isQsetting, setIsQsetting] = useState(false);\n\n    useEffect(() => {\n        const load_data = async () => {\n            try {\n                await axios({\n                    method: \"POST\",\n                    url: \"https://qna-restapi-dxpyj.run.goorm.site/getQestionsetData\",\n                    data: {title: title},\n                    headers: {'Content-Type': 'application/json'}\n                })\n                .then ((response) => {\n                    const res =response.data;\n                    if (res != null) {\n                        setQnAs(res);\n                    }\n                })\n                .catch(error =>{\n                    console.log(\"error\");\n                })\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setIsLoading(true);\n        };\n\n        load_data();\n    }, []);\n\n    useEffect(() => {\n        axios({\n            method: \"POST\",\n            url: \"https://qna-restapi-dxpyj.run.goorm.site/uploadQuestionSet\",\n            data: {\n                title: title, \n                question_set: QnAs, \n                user: username\n            },\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then ((response) => {\n        })\n        .catch(error =>{\n            console.log(\"error\");\n        })\n    }, [QnAs]);\n\n    const currentQuestionHandler = (e) => {\n        e.preventDefault();\n        setCurrentQuestion(e.target.value);\n    }\n\n    // const generateQuestion = async () => {\n    //     setLoadRQs(true);\n    //     try {\n    //         const getApi = 'https://qna-restapi-dxpyj.run.goorm.site/getQuestion/' + String(url).split('/').pop();\n    //         const result = await axios(getApi);\n    //         setRecommendQTurn(recommendQTurn + 1);\n    //         setRecommendQs(result.data.questions);\n    //     } catch (error) {\n    //         console.error('Error:', error);\n    //     }\n    //     setLoadRQs(false);\n    // }\n\n    async function generateRecommendQuestion (endpoint) {\n        setLoadRQs(true);\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/\" + endpoint + \"/\",\n            data: { \n                url: String(url).split('/').pop(),\n                authorID: String(userScholarID).split('/').pop(),\n                authorInfo: authorInfo,\n                title: title,\n                abstract: abstract,\n                viewer: viewerprompt\n            },\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setRecommendQs(res.questions);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n        setLoadRQs(false);\n    }\n\n    async function addQuestion (question) {\n        setQnAs(prevData => [...prevData, {question: String(question), answer: \"Enter the answer\", isPublic: false}]);\n    }\n\n    async function addFollowUpAnswer (question, index) {\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n            setQnAs( prevData => {\n                const newQnAs = [...prevData];\n                newQnAs.splice(index + 1, 0, {question: String(question), answer: String(res.lucy_answer), isPublic: false});\n                return newQnAs;\n            });\n        })\n        .catch(error => {\n        });\n    }\n\n    async function regenerateAnswer (question, updateIndex) {\n        await axios({\n            method: \"POST\",\n            url:\"https://qna-restapi-dxpyj.run.goorm.site/get_lucy_answer\",\n            data: { question: question, title: title},\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then((response) => {\n            const res =response.data;\n\n            setQnAs(prevData => {\n                let newData = [...prevData];\n                newData.map((QnA, index) => updateIndex === index ? {...QnA, answer: String(res.lucy_answer) } : QnA);\n                return newData;\n            })\n        })\n        .catch(error => {\n        });\n    }\n\n    function deleteQuestion (index) {\n        setQnAs(prevData => prevData.filter((item, i) => i !== index));\n    }\n\n    function addRecommendQuestion (question, index) {\n        addQuestion(question);\n        setRecommendQs(prevData => {\n            let newArray = [...prevData];\n            newArray.splice(index, 1);\n            return newArray;\n        })\n    }\n\n    function addCurrentQuestion () {\n        if(currentQuestion !== \"\") {\n            addQuestion(currentQuestion);\n            setCurrentQuestion(\"\");\n        }\n    }\n\n    function updateAnswer (updateIndex, newAnswer) {\n        setQnAs(prevData => (\n            prevData.map((QnA, index) => updateIndex === index ? {...QnA, answer: newAnswer } : QnA)\n        ));\n    }\n\n    function updatePublic (updateIndex, isPublic) {\n        setQnAs(prevData => (\n            prevData.map((QnA, index) => updateIndex === index ? {...QnA, isPublic: isPublic } : QnA)\n        ));\n    }\n\n    function updateRecommendQuestion (updateIndex, newQuestion) {\n        setRecommendQs(prevData => (\n            prevData.map((question, index) => updateIndex === index ? newQuestion : question)\n        ));\n    }\n\n    function onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n        const newQnAs = reorder(\n            QnAs,\n            result.source.index,\n            result.destination.index\n        );\n        setQnAs(newQnAs);\n    }\n\n    function openSetting () {\n        setIsQsetting(true);\n    }\n    \n    function closeSetting () {\n        setIsQsetting(false);\n    }\n\n    function updatePrompt (prompt) {\n        setViewerprompt(prompt);\n    }\n\n    if(!isLoading) {\n        return(\n            <>\n                <div className='mainPage'>\n                    <Topbar/>\n                    <div className='loadingContainer'>\n                        <div>\n                            Loading...\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    return(\n        <>\n            <div className='mainPage'>\n                <Topbar/>\n                <div className='container'>\n                    <div className='title'>\n                        {title}\n                    </div>\n                    <div className='authors'>\n                        {authors}\n                    </div>\n                    <div className='previewContainer'>\n                        <Link \n                            to = {'/preview'}\n                            state = {{ \n                                url: url,\n                                title: title,\n                                abstract: abstract,\n                                authors: authors,\n                                QnAs: QnAs,\n                                username: username\n                                }} \n                            className='previewBtn'\n                        >\n                            <div>Preview</div>\n                        </Link>\n                    </div>\n                    <div className='subtitleContainer'>\n                        <div className='subtitle'>\n                            Add Question\n                        </div>    \n                    </div>\n                    <div className='inputContainer'>\n                        <input value={currentQuestion} onChange={currentQuestionHandler} placeholder='Type Your Own Question'></input>\n                        <button onClick={addCurrentQuestion}>Add +</button>\n                    </div>\n                    <div className='subtitleContainer'>\n                        <div className='subtitle'>\n                            QnA\n                        </div>    \n                    </div>\n                    <DragDropContext onDragEnd={onDragEnd}>\n                        { (QnAs.length === 0 && waitQList.length === 0) ? <div className='noQuestion'>No Question</div> \n                            :\n                            <Droppable droppableId=\"droppable\">\n                                {(provided, snapshot) => (\n                                    <div\n                                        {...provided.droppableProps}\n                                        ref={provided.innerRef}\n                                        // style={getListStyle(snapshot.isDraggingOver)}\n                                        className='questionContainer'\n                                    >\n                                    {QnAs.map((QnA, index) => (\n                                        <Draggable key={String(QnA.question + index)} draggableId={String(QnA.question + index)} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                >\n                                                    <Questionbox \n                                                        key={index}\n                                                        myIndex={index}\n                                                        id={String(QnA.question + index)}\n                                                        title ={title}\n                                                        abstract = { abstract }\n                                                        question={QnA.question}\n                                                        answer={QnA.answer}\n                                                        isPublic={QnA.isPublic}\n                                                        updateAnswer={(newAnswer)=>updateAnswer(index, newAnswer)}\n                                                        updatePublic={(isPublic)=>updatePublic(index, isPublic)}\n                                                        deleteQuestion={() => deleteQuestion(index)}\n                                                        addFollowUpAnswer = {(question, i) => addFollowUpAnswer(question, i)}\n                                                        regenerateAnswer = {(question) => regenerateAnswer(question, index)}\n                                                        handle={provided.dragHandleProps}\n                                                    />\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                    {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                        }\n                        <div className='tempoQuestionboxContainer'>\n                            {waitQList.map((Q, index) => (\n                                <div className='tempoQuestionbox' key={index}>\n                                    <div className='questionbar'>{Q.question}</div>\n                                    <div className='answerbox'>Answer is being generated...</div>\n                                </div>\n                            ))}\n                        </div>\n                    </DragDropContext>\n                </div>\n                <div className='footer'>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}