{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Questionbox/questionbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './questionbox.css';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport ToggleButton from 'react-toggle-button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Questionbox = props => {\n  _s();\n  const [isEdit, setIsEdit] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n  const [isFoucs, setIsFocus] = useState(false);\n\n  // variables about follow-up questions  \n  const [followUpQuestions, setfollowUpQuestions] = useState(\"empty\");\n  const [isFollowUp, setIsFollowUp] = useState(false);\n  const [followClicked, setFollowClicked] = useState(false);\n  const [followQuestion, setFollowQuestion] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n\n  // variables about answers \n  const [prevAnswer, setPrevAnswer] = useState(\"\");\n  const [currentAnswer, setCurrentAnswer] = useState(\"\");\n\n  // check is regenerate\n  const [isRegenerate, setIsRegenerate] = useState(false);\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    setCurrentQuestion(props.question);\n    setPrevAnswer(props.answer);\n    setCurrentAnswer(props.answer);\n    setIsPublic(props.isPublic);\n  }, []);\n  async function addFollowUpQuestion(prevQuestion, prevAnswer) {\n    if (!isFollowUp) {\n      setIsFollowUp(true);\n      console.log('start add follow up question');\n      axios({\n        method: \"POST\",\n        url: \"https://qna-restapi-dxpyj.run.goorm.site/getFUQuestion\",\n        data: {\n          title: props.title,\n          abstract: props.abstract,\n          question: prevQuestion,\n          answer: prevAnswer\n        },\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        const res = response.data;\n        setfollowUpQuestions(JSON.parse(res));\n        setIsFollowUp(false);\n      }).catch(error => {\n        console.log(\"error\");\n        setIsFollowUp(false);\n      });\n    }\n  }\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.dispatchEvent(new Event('input', {\n        bubbles: true\n      }));\n    }\n  }, [currentAnswer]);\n\n  // useEffect(()=> {\n  //     setIsWaitAnswer(props.isWaitAnswer);\n  //     if(props.isWaitAnswer === false) {\n  //         cancelAnswer();\n  //     }\n  // }, [props.isWaitAnswer]);\n\n  const currentAnswerHandler = e => {\n    e.preventDefault();\n    setCurrentAnswer(e.target.value);\n  };\n  function changeIsEdit() {\n    setCurrentAnswer(props.answer);\n    setIsEdit(true);\n    if (textAreaRef.current) {\n      textAreaRef.current.focus();\n    }\n  }\n  function cancelAnswer() {\n    setCurrentAnswer(prevAnswer);\n    setIsEdit(false);\n  }\n  function changeAnswer() {\n    props.updateAnswer(currentAnswer);\n    setPrevAnswer(currentAnswer);\n    setIsEdit(false);\n  }\n  function changePublic(isPublic) {\n    props.updatePublic(!isPublic);\n    setIsPublic(!isPublic);\n  }\n  function requestfollowUp() {\n    if (!isFollowUp) {\n      setfollowUpQuestions(\"empty\");\n      addFollowUpQuestion(currentQuestion, currentAnswer);\n    }\n  }\n  async function regenerateAnswer() {\n    setCurrentAnswer(\"Regenerate Answer...\");\n    setIsRegenerate(true);\n    const newAnswer = await props.regenerateAnswer(currentQuestion);\n    setPrevAnswer(newAnswer);\n    setCurrentAnswer(newAnswer);\n    setIsRegenerate(false);\n  }\n  const handleFocus = () => {\n    setIsFocus(true);\n  };\n  const handleBlur = () => {\n    setIsFocus(false);\n  };\n  const requestFollowUpQuestion = async question => {\n    setFollowQuestion(question);\n    setFollowClicked(true);\n    await props.addFollowUpAnswer(question, props.myIndex);\n    setFollowClicked(false);\n    setfollowUpQuestions(\"empty\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    tabIndex: \"0\",\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contatiner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: currentQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"makepublic\",\n              children: \"make public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              className: \"toggleBtn\",\n              inactiveLabel: '',\n              activeLabel: '',\n              colors: {\n                activeThumb: {\n                  base: 'rgb(164,44,37)'\n                },\n                inactiveThumb: {\n                  base: 'rgb(190,154,152)'\n                },\n                active: {\n                  base: 'rgb(234,209,207)',\n                  hover: 'rgb(242,217,215)'\n                },\n                inactive: {\n                  base: 'rgb(234,209,207)',\n                  hover: 'rgb(242,217,215)'\n                }\n              },\n              containerStyle: {\n                width: '42px'\n              },\n              trackStyle: {\n                width: '42px'\n              },\n              thumbAnimateRange: [0, 24],\n              value: isPublic,\n              onToggle: value => {\n                changePublic(value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/trash.png\",\n              alt: 'delete button',\n              className: \"deleteBtn\",\n              onClick: props.deleteQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answerbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer\",\n            children: isEdit ? /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              className: \"editAnswer\",\n              ref: textAreaRef,\n              value: currentAnswer,\n              onChange: currentAnswerHandler,\n              onResize: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: currentAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 177\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonContainer\",\n            children: isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editBtns\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancelBtn\",\n                onClick: cancelAnswer,\n                children: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 65\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"completeBtn\",\n                onClick: changeAnswer,\n                children: \"complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 134\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: changeIsEdit,\n              children: \"Edit the Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 215\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"advanceBtns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: regenerateAnswer,\n            className: \"redoBtn\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/redo.svg\",\n              alt: 'redo button'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 80\n            }, this), \" Regenerate \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 140\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: requestfollowUp,\n            children: [\"Recommend \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Follow-up Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        tabIndex: \"0\",\n        className: \"handle\",\n        src: \"images/handle.svg\",\n        alt: \"handle\",\n        ...props.handle,\n        onMouseDown: handleBlur,\n        onMouseUp: handleFocus\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"followUpQuestionContainer\",\n      children: followClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tempoQuestionbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionbar\",\n          children: followQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answerbox\",\n          children: \"Answer is being generated...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }, this) : isFoucs ? followUpQuestions !== \"empty\" ? followUpQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"followUpQuestion\",\n        onClick: () => requestFollowUpQuestion(question),\n        children: question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 78\n      }, this)) : isFollowUp ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loadingHolder\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"loading\",\n          src: \"images/loading.gif\",\n          alt: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }, this) : null : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this)]\n  }, props.myIndex, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(Questionbox, \"GAeSTZU+KGm3h5OYgvP7x4Z9BK4=\");\n_c = Questionbox;\nvar _c;\n$RefreshReg$(_c, \"Questionbox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TextareaAutosize","ToggleButton","axios","jsxDEV","_jsxDEV","Questionbox","props","_s","isEdit","setIsEdit","isPublic","setIsPublic","isFoucs","setIsFocus","followUpQuestions","setfollowUpQuestions","isFollowUp","setIsFollowUp","followClicked","setFollowClicked","followQuestion","setFollowQuestion","currentQuestion","setCurrentQuestion","prevAnswer","setPrevAnswer","currentAnswer","setCurrentAnswer","isRegenerate","setIsRegenerate","textAreaRef","question","answer","addFollowUpQuestion","prevQuestion","console","log","method","url","data","title","abstract","headers","then","response","res","JSON","parse","catch","error","current","dispatchEvent","Event","bubbles","currentAnswerHandler","e","preventDefault","target","value","changeIsEdit","focus","cancelAnswer","changeAnswer","updateAnswer","changePublic","updatePublic","requestfollowUp","regenerateAnswer","newAnswer","handleFocus","handleBlur","requestFollowUpQuestion","addFollowUpAnswer","myIndex","tabIndex","onFocus","onBlur","children","className","fileName","_jsxFileName","lineNumber","columnNumber","inactiveLabel","activeLabel","colors","activeThumb","base","inactiveThumb","active","hover","inactive","containerStyle","width","trackStyle","thumbAnimateRange","onToggle","src","alt","onClick","deleteQuestion","ref","onChange","onResize","handle","onMouseDown","onMouseUp","id","map","index","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Questionbox/questionbox.js"],"sourcesContent":["import React, { useState, useRef, useEffect} from 'react'\nimport './questionbox.css'\nimport TextareaAutosize from 'react-autosize-textarea';\nimport ToggleButton from 'react-toggle-button';\nimport axios from 'axios';\n\nexport const Questionbox = (props) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [isPublic, setIsPublic] = useState(false);\n    const [isFoucs, setIsFocus] = useState(false);\n\n    // variables about follow-up questions  \n    const [followUpQuestions, setfollowUpQuestions] = useState(\"empty\");\n    const [isFollowUp, setIsFollowUp] = useState(false);\n    const [followClicked, setFollowClicked] = useState(false);\n    const [followQuestion, setFollowQuestion] = useState(\"\");\n\n    const [currentQuestion, setCurrentQuestion] = useState(\"\");\n\n    // variables about answers \n    const [prevAnswer, setPrevAnswer] = useState(\"\");\n    const [currentAnswer, setCurrentAnswer] = useState(\"\");\n\n    // check is regenerate\n    const [isRegenerate, setIsRegenerate] = useState(false);\n\n    const textAreaRef = useRef(null);\n\n    useEffect(() => {\n        setCurrentQuestion(props.question);\n        setPrevAnswer(props.answer);\n        setCurrentAnswer(props.answer);\n        setIsPublic(props.isPublic);\n    }, [])\n\n    async function addFollowUpQuestion (prevQuestion, prevAnswer) {\n        if(!isFollowUp) {\n            setIsFollowUp(true);\n            console.log('start add follow up question');\n            axios({\n                method: \"POST\",\n                url: \"https://qna-restapi-dxpyj.run.goorm.site/getFUQuestion\",\n                data: {\n                    title: props.title,\n                    abstract: props.abstract,\n                    question: prevQuestion,\n                    answer: prevAnswer\n                },\n                headers: {'Content-Type': 'application/json'}\n            })\n            .then ((response) => {\n                const res = response.data;\n                setfollowUpQuestions(JSON.parse((res)));\n                setIsFollowUp(false);\n            })\n            .catch(error =>{\n                console.log(\"error\");\n                setIsFollowUp(false);\n            })\n        }\n    }\n\n\n    useEffect(() => {\n        if(textAreaRef.current) {\n            textAreaRef.current.dispatchEvent(new Event('input', { bubbles: true }));\n        }\n    }, [currentAnswer]);\n\n    // useEffect(()=> {\n    //     setIsWaitAnswer(props.isWaitAnswer);\n    //     if(props.isWaitAnswer === false) {\n    //         cancelAnswer();\n    //     }\n    // }, [props.isWaitAnswer]);\n\n    const currentAnswerHandler = (e) => {\n        e.preventDefault();\n        setCurrentAnswer(e.target.value);\n    }\n\n    function changeIsEdit() {\n        setCurrentAnswer(props.answer);\n        setIsEdit(true);\n        if(textAreaRef.current) {\n            textAreaRef.current.focus();\n        }\n    }\n\n    function cancelAnswer() {\n        setCurrentAnswer(prevAnswer);\n        setIsEdit(false);\n    }\n\n    function changeAnswer() {\n        props.updateAnswer(currentAnswer);\n        setPrevAnswer(currentAnswer);\n        setIsEdit(false);\n    }\n\n    function changePublic(isPublic) {\n        props.updatePublic(!isPublic);\n        setIsPublic(!isPublic);\n    }\n\n    function requestfollowUp() {\n        if (!isFollowUp) {\n            setfollowUpQuestions(\"empty\");\n            addFollowUpQuestion(currentQuestion, currentAnswer);\n        }\n    }\n\n    async function regenerateAnswer () {\n        setCurrentAnswer(\"Regenerate Answer...\");\n        setIsRegenerate(true);\n        const newAnswer = await props.regenerateAnswer(currentQuestion);\n        setPrevAnswer(newAnswer);\n        setCurrentAnswer(newAnswer);\n        setIsRegenerate(false);\n    }\n\n    const handleFocus = () => {\n        setIsFocus(true);\n    };\n    \n    const handleBlur = () => {\n        setIsFocus(false);\n    };\n\n    const requestFollowUpQuestion = async (question) => {\n        setFollowQuestion(question);\n        setFollowClicked(true);\n        await props.addFollowUpAnswer(question, props.myIndex);\n        setFollowClicked(false);\n        setfollowUpQuestions(\"empty\");\n    }\n\n    return(\n        <div key={props.myIndex} tabIndex=\"0\" onFocus={handleFocus} onBlur={handleBlur}>\n            <div className='questionbox'>\n                <div className='contatiner'>\n                    <div className='questionbar'>\n                        <div className='question'>\n                            {currentQuestion}\n                        </div>\n                        <div className='buttons'>\n                            <div className='makepublic'>\n                                make public\n                            </div>\n                            <ToggleButton\n                                className='toggleBtn'\n                                inactiveLabel={''}\n                                activeLabel={''}\n                                colors={{\n                                    activeThumb: {\n                                        base: 'rgb(164,44,37)'\n                                    },\n                                    inactiveThumb: {\n                                        base: 'rgb(190,154,152)'\n                                    },\n                                    active: {\n                                        base: 'rgb(234,209,207)',\n                                        hover: 'rgb(242,217,215)'\n                                    },\n                                    inactive: {\n                                        base: 'rgb(234,209,207)',\n                                        hover: 'rgb(242,217,215)'\n                                    }\n                                }}\n                                containerStyle={{width:'42px'}}\n                                trackStyle={{width:'42px'}}\n                                thumbAnimateRange={[0, 24]}\n                                value={ isPublic }\n                                onToggle={(value) => {\n                                    changePublic(value);\n                                }} \n                                />\n                            <img src=\"images/trash.png\" alt={'delete button'} className='deleteBtn' onClick={props.deleteQuestion}/>\n                        </div>\n                    </div>\n                    <div className='answerbox'>\n                        <div className='answer'>\n                            {isEdit ? <TextareaAutosize className='editAnswer' ref={textAreaRef} value={currentAnswer} onChange={currentAnswerHandler} onResize={(e) => {}}/> : <div>{currentAnswer}</div>}\n                        </div>\n                        \n                        <div className='buttonContainer'>\n                            {isEdit ? <div className='editBtns'><button className='cancelBtn' onClick={cancelAnswer}>cancel</button> <button className='completeBtn' onClick={changeAnswer}>complete</button></div> : <button onClick={changeIsEdit}>Edit the Answer</button>}\n                        </div>\n                    </div>\n                    <div className='advanceBtns'>\n                        <button onClick={regenerateAnswer} className='redoBtn'><img src=\"images/redo.svg\" alt={'redo button'}/> Regenerate <b>Answer</b></button>\n                        <button onClick={requestfollowUp}>Recommend <b>Follow-up Question</b></button>\n                    </div>\n                </div>\n                <img key={props.id} tabIndex=\"0\" className='handle' src=\"images/handle.svg\" alt=\"handle\" {...props.handle} onMouseDown={handleBlur} onMouseUp={handleFocus}/>\n            </div>\n                <div className='followUpQuestionContainer'>\n                    {followClicked ? \n                        <div className='tempoQuestionbox'>\n                            <div className='questionbar'>{followQuestion}</div>\n                            <div className='answerbox'>Answer is being generated...</div>\n                        </div>\n                        :\n                        (isFoucs ?\n                            ( followUpQuestions !== \"empty\" ?\n                                (followUpQuestions.map((question, index) => (<div key={index} className='followUpQuestion' onClick={() => requestFollowUpQuestion(question)}>{question}</div>)))\n                                :\n                                (isFollowUp ?\n                                    <div className='loadingHolder'>\n                                        <img className='loading' src=\"images/loading.gif\" alt=\"loading\" />\n                                    </div>\n                                    :\n                                    null\n                                )\n                            )\n                            :\n                            null\n                        )\n                    }\n                </div> \n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACzD,OAAO,mBAAmB;AAC1B,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,OAAO,CAAC;EACnE,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMiC,WAAW,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACZwB,kBAAkB,CAACjB,KAAK,CAACyB,QAAQ,CAAC;IAClCN,aAAa,CAACnB,KAAK,CAAC0B,MAAM,CAAC;IAC3BL,gBAAgB,CAACrB,KAAK,CAAC0B,MAAM,CAAC;IAC9BrB,WAAW,CAACL,KAAK,CAACI,QAAQ,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeuB,mBAAmBA,CAAEC,YAAY,EAAEV,UAAU,EAAE;IAC1D,IAAG,CAACR,UAAU,EAAE;MACZC,aAAa,CAAC,IAAI,CAAC;MACnBkB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3ClC,KAAK,CAAC;QACFmC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,wDAAwD;QAC7DC,IAAI,EAAE;UACFC,KAAK,EAAElC,KAAK,CAACkC,KAAK;UAClBC,QAAQ,EAAEnC,KAAK,CAACmC,QAAQ;UACxBV,QAAQ,EAAEG,YAAY;UACtBF,MAAM,EAAER;QACZ,CAAC;QACDkB,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB;MAChD,CAAC,CAAC,CACDC,IAAI,CAAGC,QAAQ,IAAK;QACjB,MAAMC,GAAG,GAAGD,QAAQ,CAACL,IAAI;QACzBxB,oBAAoB,CAAC+B,IAAI,CAACC,KAAK,CAAEF,GAAI,CAAC,CAAC;QACvC5B,aAAa,CAAC,KAAK,CAAC;MACxB,CAAC,CAAC,CACD+B,KAAK,CAACC,KAAK,IAAG;QACXd,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpBnB,aAAa,CAAC,KAAK,CAAC;MACxB,CAAC,CAAC;IACN;EACJ;EAGAlB,SAAS,CAAC,MAAM;IACZ,IAAG+B,WAAW,CAACoB,OAAO,EAAE;MACpBpB,WAAW,CAACoB,OAAO,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC,CAAC;IAC5E;EACJ,CAAC,EAAE,CAAC3B,aAAa,CAAC,CAAC;;EAEnB;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM4B,oBAAoB,GAAIC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB7B,gBAAgB,CAAC4B,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,SAASC,YAAYA,CAAA,EAAG;IACpBhC,gBAAgB,CAACrB,KAAK,CAAC0B,MAAM,CAAC;IAC9BvB,SAAS,CAAC,IAAI,CAAC;IACf,IAAGqB,WAAW,CAACoB,OAAO,EAAE;MACpBpB,WAAW,CAACoB,OAAO,CAACU,KAAK,CAAC,CAAC;IAC/B;EACJ;EAEA,SAASC,YAAYA,CAAA,EAAG;IACpBlC,gBAAgB,CAACH,UAAU,CAAC;IAC5Bf,SAAS,CAAC,KAAK,CAAC;EACpB;EAEA,SAASqD,YAAYA,CAAA,EAAG;IACpBxD,KAAK,CAACyD,YAAY,CAACrC,aAAa,CAAC;IACjCD,aAAa,CAACC,aAAa,CAAC;IAC5BjB,SAAS,CAAC,KAAK,CAAC;EACpB;EAEA,SAASuD,YAAYA,CAACtD,QAAQ,EAAE;IAC5BJ,KAAK,CAAC2D,YAAY,CAAC,CAACvD,QAAQ,CAAC;IAC7BC,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B;EAEA,SAASwD,eAAeA,CAAA,EAAG;IACvB,IAAI,CAAClD,UAAU,EAAE;MACbD,oBAAoB,CAAC,OAAO,CAAC;MAC7BkB,mBAAmB,CAACX,eAAe,EAAEI,aAAa,CAAC;IACvD;EACJ;EAEA,eAAeyC,gBAAgBA,CAAA,EAAI;IAC/BxC,gBAAgB,CAAC,sBAAsB,CAAC;IACxCE,eAAe,CAAC,IAAI,CAAC;IACrB,MAAMuC,SAAS,GAAG,MAAM9D,KAAK,CAAC6D,gBAAgB,CAAC7C,eAAe,CAAC;IAC/DG,aAAa,CAAC2C,SAAS,CAAC;IACxBzC,gBAAgB,CAACyC,SAAS,CAAC;IAC3BvC,eAAe,CAAC,KAAK,CAAC;EAC1B;EAEA,MAAMwC,WAAW,GAAGA,CAAA,KAAM;IACtBxD,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMyD,UAAU,GAAGA,CAAA,KAAM;IACrBzD,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAM0D,uBAAuB,GAAG,MAAOxC,QAAQ,IAAK;IAChDV,iBAAiB,CAACU,QAAQ,CAAC;IAC3BZ,gBAAgB,CAAC,IAAI,CAAC;IACtB,MAAMb,KAAK,CAACkE,iBAAiB,CAACzC,QAAQ,EAAEzB,KAAK,CAACmE,OAAO,CAAC;IACtDtD,gBAAgB,CAAC,KAAK,CAAC;IACvBJ,oBAAoB,CAAC,OAAO,CAAC;EACjC,CAAC;EAED,oBACIX,OAAA;IAAyBsE,QAAQ,EAAC,GAAG;IAACC,OAAO,EAAEN,WAAY;IAACO,MAAM,EAAEN,UAAW;IAAAO,QAAA,gBAC3EzE,OAAA;MAAK0E,SAAS,EAAC,aAAa;MAAAD,QAAA,gBACxBzE,OAAA;QAAK0E,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBzE,OAAA;UAAK0E,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxBzE,OAAA;YAAK0E,SAAS,EAAC,UAAU;YAAAD,QAAA,EACpBvD;UAAe;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACN9E,OAAA;YAAK0E,SAAS,EAAC,SAAS;YAAAD,QAAA,gBACpBzE,OAAA;cAAK0E,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAC;YAE5B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACN9E,OAAA,CAACH,YAAY;cACT6E,SAAS,EAAC,WAAW;cACrBK,aAAa,EAAE,EAAG;cAClBC,WAAW,EAAE,EAAG;cAChBC,MAAM,EAAE;gBACJC,WAAW,EAAE;kBACTC,IAAI,EAAE;gBACV,CAAC;gBACDC,aAAa,EAAE;kBACXD,IAAI,EAAE;gBACV,CAAC;gBACDE,MAAM,EAAE;kBACJF,IAAI,EAAE,kBAAkB;kBACxBG,KAAK,EAAE;gBACX,CAAC;gBACDC,QAAQ,EAAE;kBACNJ,IAAI,EAAE,kBAAkB;kBACxBG,KAAK,EAAE;gBACX;cACJ,CAAE;cACFE,cAAc,EAAE;gBAACC,KAAK,EAAC;cAAM,CAAE;cAC/BC,UAAU,EAAE;gBAACD,KAAK,EAAC;cAAM,CAAE;cAC3BE,iBAAiB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE;cAC3BrC,KAAK,EAAGhD,QAAU;cAClBsF,QAAQ,EAAGtC,KAAK,IAAK;gBACjBM,YAAY,CAACN,KAAK,CAAC;cACvB;YAAE;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN9E,OAAA;cAAK6F,GAAG,EAAC,kBAAkB;cAACC,GAAG,EAAE,eAAgB;cAACpB,SAAS,EAAC,WAAW;cAACqB,OAAO,EAAE7F,KAAK,CAAC8F;YAAe;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN9E,OAAA;UAAK0E,SAAS,EAAC,WAAW;UAAAD,QAAA,gBACtBzE,OAAA;YAAK0E,SAAS,EAAC,QAAQ;YAAAD,QAAA,EAClBrE,MAAM,gBAAGJ,OAAA,CAACJ,gBAAgB;cAAC8E,SAAS,EAAC,YAAY;cAACuB,GAAG,EAAEvE,WAAY;cAAC4B,KAAK,EAAEhC,aAAc;cAAC4E,QAAQ,EAAEhD,oBAAqB;cAACiD,QAAQ,EAAGhD,CAAC,IAAK,CAAC;YAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,gBAAG9E,OAAA;cAAAyE,QAAA,EAAMnD;YAAa;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7K,CAAC,eAEN9E,OAAA;YAAK0E,SAAS,EAAC,iBAAiB;YAAAD,QAAA,EAC3BrE,MAAM,gBAAGJ,OAAA;cAAK0E,SAAS,EAAC,UAAU;cAAAD,QAAA,gBAACzE,OAAA;gBAAQ0E,SAAS,EAAC,WAAW;gBAACqB,OAAO,EAAEtC,YAAa;gBAAAgB,QAAA,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eAAA9E,OAAA;gBAAQ0E,SAAS,EAAC,aAAa;gBAACqB,OAAO,EAAErC,YAAa;gBAAAe,QAAA,EAAC;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBAAG9E,OAAA;cAAQ+F,OAAO,EAAExC,YAAa;cAAAkB,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN9E,OAAA;UAAK0E,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxBzE,OAAA;YAAQ+F,OAAO,EAAEhC,gBAAiB;YAACW,SAAS,EAAC,SAAS;YAAAD,QAAA,gBAACzE,OAAA;cAAK6F,GAAG,EAAC,iBAAiB;cAACC,GAAG,EAAE;YAAc;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,gBAAY,eAAA9E,OAAA;cAAAyE,QAAA,EAAG;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzI9E,OAAA;YAAQ+F,OAAO,EAAEjC,eAAgB;YAAAW,QAAA,GAAC,YAAU,eAAAzE,OAAA;cAAAyE,QAAA,EAAG;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN9E,OAAA;QAAoBsE,QAAQ,EAAC,GAAG;QAACI,SAAS,EAAC,QAAQ;QAACmB,GAAG,EAAC,mBAAmB;QAACC,GAAG,EAAC,QAAQ;QAAA,GAAK5F,KAAK,CAACkG,MAAM;QAAEC,WAAW,EAAEnC,UAAW;QAACoC,SAAS,EAAErC;MAAY,GAAjJ/D,KAAK,CAACqG,EAAE;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0I,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5J,CAAC,eACF9E,OAAA;MAAK0E,SAAS,EAAC,2BAA2B;MAAAD,QAAA,EACrC3D,aAAa,gBACVd,OAAA;QAAK0E,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC7BzE,OAAA;UAAK0E,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAEzD;QAAc;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnD9E,OAAA;UAAK0E,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAC;QAA4B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,GAELtE,OAAO,GACFE,iBAAiB,KAAK,OAAO,GAC1BA,iBAAiB,CAAC8F,GAAG,CAAC,CAAC7E,QAAQ,EAAE8E,KAAK,kBAAMzG,OAAA;QAAiB0E,SAAS,EAAC,kBAAkB;QAACqB,OAAO,EAAEA,CAAA,KAAM5B,uBAAuB,CAACxC,QAAQ,CAAE;QAAA8C,QAAA,EAAE9C;MAAQ,GAA/F8E,KAAK;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgG,CAAE,CAAC,GAE9JlE,UAAU,gBACPZ,OAAA;QAAK0E,SAAS,EAAC,eAAe;QAAAD,QAAA,eAC1BzE,OAAA;UAAK0E,SAAS,EAAC,SAAS;UAACmB,GAAG,EAAC,oBAAoB;UAACC,GAAG,EAAC;QAAS;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,GAEN,IACH,GAGL;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC;EAAA,GAjFJ5E,KAAK,CAACmE,OAAO;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkFlB,CAAC;AAEd,CAAC;AAAA3E,EAAA,CAxNYF,WAAW;AAAAyG,EAAA,GAAXzG,WAAW;AAAA,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}